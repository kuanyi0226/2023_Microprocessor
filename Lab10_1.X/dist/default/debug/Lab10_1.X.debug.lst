

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Jan 09 20:56:17 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    21                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    25                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    27   000000                     
    28                           ; Generated 18/08/2023 GMT
    29                           ; 
    30                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F4520 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62   000000                     _RCREG	set	4014
    63   000000                     _TXREG	set	4013
    64   000000                     _PIE1bits	set	3997
    65   000000                     _SPBRG	set	4015
    66   000000                     _BAUDCONbits	set	4024
    67   000000                     _PIR1bits	set	3998
    68   000000                     _CCP1CON	set	4029
    69   000000                     _ADCON0bits	set	4034
    70   000000                     _ADRESL	set	4035
    71   000000                     _ADRESH	set	4036
    72   000000                     _ADCON1	set	4033
    73   000000                     _ADFM	set	32263
    74   000000                     _TRISC	set	3988
    75   000000                     _ADCON2bits	set	4032
    76   000000                     _CREN	set	32092
    77   000000                     _RCIF	set	31989
    78   000000                     _IRCF0	set	32412
    79   000000                     _IRCF1	set	32413
    80   000000                     _LATCbits	set	3979
    81   000000                     _TRISA	set	3986
    82   000000                     _INTCONbits	set	4082
    83   000000                     _TRISCbits	set	3988
    84   000000                     _RCONbits	set	4048
    85   000000                     _RCSTAbits	set	4011
    86   000000                     _TXSTAbits	set	4012
    87   000000                     _IPR1bits	set	3999
    88   000000                     _IRCF2	set	32414
    89                           
    90                           ; #config settings
    91                           
    92                           	psect	cinit
    93   00078E                     __pcinit:
    94                           	callstack 0
    95   00078E                     start_initialization:
    96                           	callstack 0
    97   00078E                     __initialization:
    98                           	callstack 0
    99                           
   100                           ; Clear objects allocated to COMRAM (42 bytes)
   101   00078E  EE00  F001         	lfsr	0,__pbssCOMRAM
   102   000792  0E2A               	movlw	42
   103   000794                     clear_0:
   104   000794  6AEE               	clrf	postinc0,c
   105   000796  06E8               	decf	wreg,f,c
   106   000798  E1FD               	bnz	clear_0
   107   00079A                     end_of_initialization:
   108                           	callstack 0
   109   00079A                     __end_of__initialization:
   110                           	callstack 0
   111   00079A  903B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   112   00079C  923B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   113   00079E  0100               	movlb	0
   114   0007A0  EFBA  F003         	goto	_main	;jump to C main() function
   115                           
   116                           	psect	bssCOMRAM
   117   000001                     __pbssCOMRAM:
   118                           	callstack 0
   119   000001                     _lenStr:
   120                           	callstack 0
   121   000001                     	ds	2
   122   000003                     _mystring:
   123                           	callstack 0
   124   000003                     	ds	20
   125   000017                     _str:
   126                           	callstack 0
   127   000017                     	ds	20
   128                           
   129                           	psect	cstackCOMRAM
   130   00002B                     __pcstackCOMRAM:
   131                           	callstack 0
   132   00002B                     ?___awmod:
   133                           	callstack 0
   134   00002B                     UART_Write@data:
   135                           	callstack 0
   136   00002B                     ___awmod@dividend:
   137                           	callstack 0
   138                           
   139                           ; 2 bytes @ 0x0
   140   00002B                     	ds	2
   141   00002D                     ___awmod@divisor:
   142                           	callstack 0
   143                           
   144                           ; 2 bytes @ 0x2
   145   00002D                     	ds	2
   146   00002F                     ___awmod@counter:
   147                           	callstack 0
   148                           
   149                           ; 1 bytes @ 0x4
   150   00002F                     	ds	1
   151   000030                     ___awmod@sign:
   152                           	callstack 0
   153                           
   154                           ; 1 bytes @ 0x5
   155   000030                     	ds	1
   156   000031                     ??_Lo_ISR:
   157                           
   158                           ; 1 bytes @ 0x6
   159   000031                     	ds	5
   160   000036                     
   161                           ; 1 bytes @ 0xB
   162   000036                     	ds	2
   163   000038                     strcpy@dest:
   164                           	callstack 0
   165                           
   166                           ; 1 bytes @ 0xD
   167   000038                     	ds	1
   168   000039                     strcpy@src:
   169                           	callstack 0
   170                           
   171                           ; 1 bytes @ 0xE
   172   000039                     	ds	1
   173   00003A                     strcpy@d:
   174                           	callstack 0
   175                           
   176                           ; 1 bytes @ 0xF
   177   00003A                     	ds	1
   178   00003B                     
   179                           ; 1 bytes @ 0x10
   180 ;;
   181 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   182 ;;
   183 ;; *************** function _main *****************
   184 ;; Defined at:
   185 ;;		line 13 in file "main.c"
   186 ;; Parameters:    Size  Location     Type
   187 ;;		None
   188 ;; Auto vars:     Size  Location     Type
   189 ;;		None
   190 ;; Return value:  Size  Location     Type
   191 ;;                  1    wreg      void 
   192 ;; Registers used:
   193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   194 ;; Tracked objects:
   195 ;;		On entry : 0/0
   196 ;;		On exit  : 0/0
   197 ;;		Unchanged: 0/0
   198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   199 ;;      Params:         0       0       0       0       0       0       0
   200 ;;      Locals:         0       0       0       0       0       0       0
   201 ;;      Temps:          0       0       0       0       0       0       0
   202 ;;      Totals:         0       0       0       0       0       0       0
   203 ;;Total ram usage:        0 bytes
   204 ;; Hardware stack levels required when called: 6
   205 ;; This function calls:
   206 ;;		_GetString
   207 ;;		_SYSTEM_Initialize
   208 ;;		_strcpy
   209 ;; This function is called by:
   210 ;;		Startup code after reset
   211 ;; This function uses a non-reentrant model
   212 ;;
   213                           
   214                           	psect	text0
   215   000774                     __ptext0:
   216                           	callstack 0
   217   000774                     _main:
   218                           	callstack 25
   219   000774                     
   220                           ;main.c: 16:     SYSTEM_Initialize() ;
   221   000774  ECD2  F003         	call	_SYSTEM_Initialize	;wreg free
   222   000778                     l1059:
   223                           
   224                           ;main.c: 19:         strcpy(str, GetString());
   225   000778  0E17               	movlw	low _str
   226   00077A  6E38               	movwf	strcpy@dest^0,c
   227   00077C  ECE7  F003         	call	_GetString	;wreg free
   228   000780  6E39               	movwf	strcpy@src^0,c
   229   000782  EC94  F003         	call	_strcpy	;wreg free
   230   000786  EFBC  F003         	goto	l1059
   231   00078A  EF36  F000         	goto	start
   232   00078E                     __end_of_main:
   233                           	callstack 0
   234                           
   235 ;; *************** function _strcpy *****************
   236 ;; Defined at:
   237 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strcpy.c"
   238 ;; Parameters:    Size  Location     Type
   239 ;;  dest            1   13[COMRAM] PTR unsigned char 
   240 ;;		 -> str(20), 
   241 ;;  src             1   14[COMRAM] PTR const unsigned char 
   242 ;;		 -> mystring(20), 
   243 ;; Auto vars:     Size  Location     Type
   244 ;;  d               1   15[COMRAM] PTR unsigned char 
   245 ;;		 -> str(20), 
   246 ;; Return value:  Size  Location     Type
   247 ;;                  1    wreg      PTR unsigned char 
   248 ;; Registers used:
   249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   250 ;; Tracked objects:
   251 ;;		On entry : 0/0
   252 ;;		On exit  : 0/0
   253 ;;		Unchanged: 0/0
   254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   255 ;;      Params:         2       0       0       0       0       0       0
   256 ;;      Locals:         1       0       0       0       0       0       0
   257 ;;      Temps:          0       0       0       0       0       0       0
   258 ;;      Totals:         3       0       0       0       0       0       0
   259 ;;Total ram usage:        3 bytes
   260 ;; Hardware stack levels used: 1
   261 ;; Hardware stack levels required when called: 4
   262 ;; This function calls:
   263 ;;		Nothing
   264 ;; This function is called by:
   265 ;;		_main
   266 ;; This function uses a non-reentrant model
   267 ;;
   268                           
   269                           	psect	text1
   270   000728                     __ptext1:
   271                           	callstack 0
   272   000728                     _strcpy:
   273                           	callstack 26
   274   000728  C038  F03A         	movff	strcpy@dest,strcpy@d
   275   00072C                     l1045:
   276   00072C  2A39               	incf	strcpy@src^0,f,c
   277   00072E  0439               	decf	strcpy@src^0,w,c
   278   000730  6ED9               	movwf	fsr2l,c
   279   000732  6ADA               	clrf	fsr2h,c
   280   000734  2A3A               	incf	strcpy@d^0,f,c
   281   000736  043A               	decf	strcpy@d^0,w,c
   282   000738  6EE1               	movwf	fsr1l,c
   283   00073A  6AE2               	clrf	fsr1h,c
   284   00073C  CFDF FFE7          	movff	indf2,indf1
   285   000740  50E7               	movf	indf1,w,c
   286   000742  A4D8               	btfss	status,2,c
   287   000744  EFA6  F003         	goto	u221
   288   000748  EFA8  F003         	goto	u220
   289   00074C                     u221:
   290   00074C  EF96  F003         	goto	l1045
   291   000750                     u220:
   292   000750  0012               	return		;funcret
   293   000752                     __end_of_strcpy:
   294                           	callstack 0
   295                           
   296 ;; *************** function _SYSTEM_Initialize *****************
   297 ;; Defined at:
   298 ;;		line 60 in file "setting_hardaware/setting.c"
   299 ;; Parameters:    Size  Location     Type
   300 ;;		None
   301 ;; Auto vars:     Size  Location     Type
   302 ;;		None
   303 ;; Return value:  Size  Location     Type
   304 ;;                  1    wreg      void 
   305 ;; Registers used:
   306 ;;		wreg, status,2, cstack
   307 ;; Tracked objects:
   308 ;;		On entry : 0/0
   309 ;;		On exit  : 0/0
   310 ;;		Unchanged: 0/0
   311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   312 ;;      Params:         0       0       0       0       0       0       0
   313 ;;      Locals:         0       0       0       0       0       0       0
   314 ;;      Temps:          0       0       0       0       0       0       0
   315 ;;      Totals:         0       0       0       0       0       0       0
   316 ;;Total ram usage:        0 bytes
   317 ;; Hardware stack levels used: 1
   318 ;; Hardware stack levels required when called: 5
   319 ;; This function calls:
   320 ;;		_INTERRUPT_Initialize
   321 ;;		_OSCILLATOR_Initialize
   322 ;;		_UART_Initialize
   323 ;; This function is called by:
   324 ;;		_main
   325 ;; This function uses a non-reentrant model
   326 ;;
   327                           
   328                           	psect	text2
   329   0007A4                     __ptext2:
   330                           	callstack 0
   331   0007A4                     _SYSTEM_Initialize:
   332                           	callstack 25
   333   0007A4                     
   334                           ;setting_hardaware/setting.c: 62:     TRISC = 0;
   335   0007A4  0E00               	movlw	0
   336   0007A6  6E94               	movwf	148,c	;volatile
   337   0007A8                     
   338                           ;setting_hardaware/setting.c: 63:     LATCbits.LC3 = 1;
   339   0007A8  868B               	bsf	139,3,c	;volatile
   340   0007AA                     
   341                           ;setting_hardaware/setting.c: 65:     OSCILLATOR_Initialize();
   342   0007AA  ECDC  F003         	call	_OSCILLATOR_Initialize	;wreg free
   343   0007AE                     
   344                           ;setting_hardaware/setting.c: 69:     INTERRUPT_Initialize();
   345   0007AE  ECE0  F003         	call	_INTERRUPT_Initialize	;wreg free
   346   0007B2                     
   347                           ;setting_hardaware/setting.c: 70:     UART_Initialize();
   348   0007B2  ECA9  F003         	call	_UART_Initialize	;wreg free
   349   0007B6  0012               	return		;funcret
   350   0007B8                     __end_of_SYSTEM_Initialize:
   351                           	callstack 0
   352                           
   353 ;; *************** function _UART_Initialize *****************
   354 ;; Defined at:
   355 ;;		line 7 in file "setting_hardaware/uart.c"
   356 ;; Parameters:    Size  Location     Type
   357 ;;		None
   358 ;; Auto vars:     Size  Location     Type
   359 ;;		None
   360 ;; Return value:  Size  Location     Type
   361 ;;                  1    wreg      void 
   362 ;; Registers used:
   363 ;;		wreg, status,2
   364 ;; Tracked objects:
   365 ;;		On entry : 0/0
   366 ;;		On exit  : 0/0
   367 ;;		Unchanged: 0/0
   368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   369 ;;      Params:         0       0       0       0       0       0       0
   370 ;;      Locals:         0       0       0       0       0       0       0
   371 ;;      Temps:          0       0       0       0       0       0       0
   372 ;;      Totals:         0       0       0       0       0       0       0
   373 ;;Total ram usage:        0 bytes
   374 ;; Hardware stack levels used: 1
   375 ;; Hardware stack levels required when called: 4
   376 ;; This function calls:
   377 ;;		Nothing
   378 ;; This function is called by:
   379 ;;		_SYSTEM_Initialize
   380 ;; This function uses a non-reentrant model
   381 ;;
   382                           
   383                           	psect	text3
   384   000752                     __ptext3:
   385                           	callstack 0
   386   000752                     _UART_Initialize:
   387                           	callstack 25
   388   000752                     
   389                           ;setting_hardaware/uart.c: 18:     TRISCbits.TRISC6 = 1;
   390   000752  8C94               	bsf	148,6,c	;volatile
   391                           
   392                           ;setting_hardaware/uart.c: 19:     TRISCbits.TRISC7 = 1;
   393   000754  8E94               	bsf	148,7,c	;volatile
   394                           
   395                           ;setting_hardaware/uart.c: 22:     TXSTAbits.SYNC = 0;
   396   000756  98AC               	bcf	172,4,c	;volatile
   397                           
   398                           ;setting_hardaware/uart.c: 23:     TXSTAbits.BRGH = 0;
   399   000758  94AC               	bcf	172,2,c	;volatile
   400                           
   401                           ;setting_hardaware/uart.c: 24:     BAUDCONbits.BRG16 = 0;
   402   00075A  96B8               	bcf	184,3,c	;volatile
   403   00075C                     
   404                           ;setting_hardaware/uart.c: 25:     SPBRG = 51;
   405   00075C  0E33               	movlw	51
   406   00075E  6EAF               	movwf	175,c	;volatile
   407   000760                     
   408                           ;setting_hardaware/uart.c: 28:     RCSTAbits.SPEN = 1;
   409   000760  8EAB               	bsf	171,7,c	;volatile
   410   000762                     
   411                           ;setting_hardaware/uart.c: 29:     PIR1bits.TXIF = 1;
   412   000762  889E               	bsf	158,4,c	;volatile
   413   000764                     
   414                           ;setting_hardaware/uart.c: 30:     PIR1bits.RCIF = 0;
   415   000764  9A9E               	bcf	158,5,c	;volatile
   416   000766                     
   417                           ;setting_hardaware/uart.c: 31:     TXSTAbits.TXEN = 1;
   418   000766  8AAC               	bsf	172,5,c	;volatile
   419   000768                     
   420                           ;setting_hardaware/uart.c: 32:     RCSTAbits.CREN = 1;
   421   000768  88AB               	bsf	171,4,c	;volatile
   422   00076A                     
   423                           ;setting_hardaware/uart.c: 34:     PIE1bits.TXIE = 0;
   424   00076A  989D               	bcf	157,4,c	;volatile
   425   00076C                     
   426                           ;setting_hardaware/uart.c: 35:     IPR1bits.TXIP = 0;
   427   00076C  989F               	bcf	159,4,c	;volatile
   428   00076E                     
   429                           ;setting_hardaware/uart.c: 36:     PIE1bits.RCIE = 1;
   430   00076E  8A9D               	bsf	157,5,c	;volatile
   431   000770                     
   432                           ;setting_hardaware/uart.c: 37:     IPR1bits.RCIP = 0;
   433   000770  9A9F               	bcf	159,5,c	;volatile
   434   000772  0012               	return		;funcret
   435   000774                     __end_of_UART_Initialize:
   436                           	callstack 0
   437                           
   438 ;; *************** function _OSCILLATOR_Initialize *****************
   439 ;; Defined at:
   440 ;;		line 77 in file "setting_hardaware/setting.c"
   441 ;; Parameters:    Size  Location     Type
   442 ;;		None
   443 ;; Auto vars:     Size  Location     Type
   444 ;;		None
   445 ;; Return value:  Size  Location     Type
   446 ;;                  1    wreg      void 
   447 ;; Registers used:
   448 ;;		None
   449 ;; Tracked objects:
   450 ;;		On entry : 0/0
   451 ;;		On exit  : 0/0
   452 ;;		Unchanged: 0/0
   453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   454 ;;      Params:         0       0       0       0       0       0       0
   455 ;;      Locals:         0       0       0       0       0       0       0
   456 ;;      Temps:          0       0       0       0       0       0       0
   457 ;;      Totals:         0       0       0       0       0       0       0
   458 ;;Total ram usage:        0 bytes
   459 ;; Hardware stack levels used: 1
   460 ;; Hardware stack levels required when called: 4
   461 ;; This function calls:
   462 ;;		Nothing
   463 ;; This function is called by:
   464 ;;		_SYSTEM_Initialize
   465 ;; This function uses a non-reentrant model
   466 ;;
   467                           
   468                           	psect	text4
   469   0007B8                     __ptext4:
   470                           	callstack 0
   471   0007B8                     _OSCILLATOR_Initialize:
   472                           	callstack 25
   473   0007B8                     
   474                           ;setting_hardaware/setting.c: 79:     IRCF2 = 1;
   475   0007B8  8CD3               	bsf	4051,6,c	;volatile
   476                           
   477                           ;setting_hardaware/setting.c: 80:     IRCF1 = 1;
   478   0007BA  8AD3               	bsf	4051,5,c	;volatile
   479                           
   480                           ;setting_hardaware/setting.c: 81:     IRCF0 = 0;
   481   0007BC  98D3               	bcf	4051,4,c	;volatile
   482   0007BE  0012               	return		;funcret
   483   0007C0                     __end_of_OSCILLATOR_Initialize:
   484                           	callstack 0
   485                           
   486 ;; *************** function _INTERRUPT_Initialize *****************
   487 ;; Defined at:
   488 ;;		line 3 in file "setting_hardaware/interrupt_manager.c"
   489 ;; Parameters:    Size  Location     Type
   490 ;;		None
   491 ;; Auto vars:     Size  Location     Type
   492 ;;		None
   493 ;; Return value:  Size  Location     Type
   494 ;;                  1    wreg      void 
   495 ;; Registers used:
   496 ;;		None
   497 ;; Tracked objects:
   498 ;;		On entry : 0/0
   499 ;;		On exit  : 0/0
   500 ;;		Unchanged: 0/0
   501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   502 ;;      Params:         0       0       0       0       0       0       0
   503 ;;      Locals:         0       0       0       0       0       0       0
   504 ;;      Temps:          0       0       0       0       0       0       0
   505 ;;      Totals:         0       0       0       0       0       0       0
   506 ;;Total ram usage:        0 bytes
   507 ;; Hardware stack levels used: 1
   508 ;; Hardware stack levels required when called: 4
   509 ;; This function calls:
   510 ;;		Nothing
   511 ;; This function is called by:
   512 ;;		_SYSTEM_Initialize
   513 ;; This function uses a non-reentrant model
   514 ;;
   515                           
   516                           	psect	text5
   517   0007C0                     __ptext5:
   518                           	callstack 0
   519   0007C0                     _INTERRUPT_Initialize:
   520                           	callstack 25
   521   0007C0                     
   522                           ;setting_hardaware/interrupt_manager.c: 5:     RCONbits.IPEN = 1;
   523   0007C0  8ED0               	bsf	208,7,c	;volatile
   524                           
   525                           ;setting_hardaware/interrupt_manager.c: 6:     INTCONbits.GIEH = 1;
   526   0007C2  8EF2               	bsf	242,7,c	;volatile
   527                           
   528                           ;setting_hardaware/interrupt_manager.c: 7:     INTCONbits.GIEL = 1;
   529   0007C4  8CF2               	bsf	242,6,c	;volatile
   530   0007C6  0012               	return		;funcret
   531   0007C8                     __end_of_INTERRUPT_Initialize:
   532                           	callstack 0
   533                           
   534 ;; *************** function _GetString *****************
   535 ;; Defined at:
   536 ;;		line 75 in file "setting_hardaware/uart.c"
   537 ;; Parameters:    Size  Location     Type
   538 ;;		None
   539 ;; Auto vars:     Size  Location     Type
   540 ;;		None
   541 ;; Return value:  Size  Location     Type
   542 ;;                  1    wreg      PTR unsigned char 
   543 ;; Registers used:
   544 ;;		wreg
   545 ;; Tracked objects:
   546 ;;		On entry : 0/0
   547 ;;		On exit  : 0/0
   548 ;;		Unchanged: 0/0
   549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   550 ;;      Params:         2       0       0       0       0       0       0
   551 ;;      Locals:         0       0       0       0       0       0       0
   552 ;;      Temps:          0       0       0       0       0       0       0
   553 ;;      Totals:         2       0       0       0       0       0       0
   554 ;;Total ram usage:        2 bytes
   555 ;; Hardware stack levels used: 1
   556 ;; Hardware stack levels required when called: 4
   557 ;; This function calls:
   558 ;;		Nothing
   559 ;; This function is called by:
   560 ;;		_main
   561 ;; This function uses a non-reentrant model
   562 ;;
   563                           
   564                           	psect	text6
   565   0007CE                     __ptext6:
   566                           	callstack 0
   567   0007CE                     _GetString:
   568                           	callstack 26
   569   0007CE                     
   570                           ;setting_hardaware/uart.c: 76:     return mystring;
   571   0007CE  0E03               	movlw	_mystring& (0+255)
   572   0007D0  0012               	return		;funcret
   573   0007D2                     __end_of_GetString:
   574                           	callstack 0
   575                           
   576 ;; *************** function _Lo_ISR *****************
   577 ;; Defined at:
   578 ;;		line 81 in file "setting_hardaware/uart.c"
   579 ;; Parameters:    Size  Location     Type
   580 ;;		None
   581 ;; Auto vars:     Size  Location     Type
   582 ;;		None
   583 ;; Return value:  Size  Location     Type
   584 ;;                  1    wreg      void 
   585 ;; Registers used:
   586 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   587 ;; Tracked objects:
   588 ;;		On entry : 0/0
   589 ;;		On exit  : 0/0
   590 ;;		Unchanged: 0/0
   591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   592 ;;      Params:         0       0       0       0       0       0       0
   593 ;;      Locals:         0       0       0       0       0       0       0
   594 ;;      Temps:          5       0       0       0       0       0       0
   595 ;;      Totals:         5       0       0       0       0       0       0
   596 ;;Total ram usage:        5 bytes
   597 ;; Hardware stack levels used: 1
   598 ;; Hardware stack levels required when called: 3
   599 ;; This function calls:
   600 ;;		_MyusartRead
   601 ;; This function is called by:
   602 ;;		Interrupt level 1
   603 ;; This function uses a non-reentrant model
   604 ;;
   605                           
   606                           	psect	intcodelo
   607   000018                     __pintcodelo:
   608                           	callstack 0
   609   000018                     _Lo_ISR:
   610                           	callstack 25
   611                           
   612                           ;incstack = 0
   613   000018  803B               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   614   00001A  CFD8 F031          	movff	status,??_Lo_ISR
   615   00001E  CFE8 F032          	movff	wreg,??_Lo_ISR+1
   616   000022  CFE0 F033          	movff	bsr,??_Lo_ISR+2
   617   000026  CFD9 F034          	movff	fsr2l,??_Lo_ISR+3
   618   00002A  CFDA F035          	movff	fsr2h,??_Lo_ISR+4
   619   00002E                     
   620                           ;setting_hardaware/uart.c: 83:     if(RCIF)
   621   00002E  AA9E               	btfss	3998,5,c	;volatile
   622   000030  EF1C  F000         	goto	i1u23_21
   623   000034  EF1E  F000         	goto	i1u23_20
   624   000038                     i1u23_21:
   625   000038  EF2A  F000         	goto	i1l157
   626   00003C                     i1u23_20:
   627   00003C                     
   628                           ;setting_hardaware/uart.c: 84:     {;setting_hardaware/uart.c: 85:         if(RCSTAbits.
      +                          OERR)
   629   00003C  A2AB               	btfss	171,1,c	;volatile
   630   00003E  EF23  F000         	goto	i1u24_21
   631   000042  EF25  F000         	goto	i1u24_20
   632   000046                     i1u24_21:
   633   000046  EF28  F000         	goto	i1l1067
   634   00004A                     i1u24_20:
   635   00004A                     
   636                           ;setting_hardaware/uart.c: 86:         {;setting_hardaware/uart.c: 87:             CREN 
      +                          = 0;
   637   00004A  98AB               	bcf	4011,4,c	;volatile
   638                           
   639                           ;setting_hardaware/uart.c: 88:             __nop();
   640   00004C  0000               	nop	
   641                           
   642                           ;setting_hardaware/uart.c: 89:             CREN = 1;
   643   00004E  88AB               	bsf	4011,4,c	;volatile
   644   000050                     i1l1067:
   645                           
   646                           ;setting_hardaware/uart.c: 92:         MyusartRead();
   647   000050  EC59  F003         	call	_MyusartRead	;wreg free
   648   000054                     i1l157:
   649   000054  C035  FFDA         	movff	??_Lo_ISR+4,fsr2h
   650   000058  C034  FFD9         	movff	??_Lo_ISR+3,fsr2l
   651   00005C  C033  FFE0         	movff	??_Lo_ISR+2,bsr
   652   000060  C032  FFE8         	movff	??_Lo_ISR+1,wreg
   653   000064  C031  FFD8         	movff	??_Lo_ISR,status
   654   000068  903B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   655   00006A  0010               	retfie	
   656   00006C                     __end_of_Lo_ISR:
   657                           	callstack 0
   658                           
   659 ;; *************** function _MyusartRead *****************
   660 ;; Defined at:
   661 ;;		line 65 in file "setting_hardaware/uart.c"
   662 ;; Parameters:    Size  Location     Type
   663 ;;		None
   664 ;; Auto vars:     Size  Location     Type
   665 ;;		None
   666 ;; Return value:  Size  Location     Type
   667 ;;                  1    wreg      void 
   668 ;; Registers used:
   669 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   670 ;; Tracked objects:
   671 ;;		On entry : 0/0
   672 ;;		On exit  : 0/0
   673 ;;		Unchanged: 0/0
   674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   675 ;;      Params:         0       0       0       0       0       0       0
   676 ;;      Locals:         0       0       0       0       0       0       0
   677 ;;      Temps:          0       0       0       0       0       0       0
   678 ;;      Totals:         0       0       0       0       0       0       0
   679 ;;Total ram usage:        0 bytes
   680 ;; Hardware stack levels used: 1
   681 ;; Hardware stack levels required when called: 2
   682 ;; This function calls:
   683 ;;		_UART_Write
   684 ;;		___awmod
   685 ;; This function is called by:
   686 ;;		_Lo_ISR
   687 ;; This function uses a non-reentrant model
   688 ;;
   689                           
   690                           	psect	text8
   691   0006B2                     __ptext8:
   692                           	callstack 0
   693   0006B2                     _MyusartRead:
   694                           	callstack 25
   695   0006B2                     
   696                           ;setting_hardaware/uart.c: 68:     mystring[lenStr] = RCREG;
   697   0006B2  5001               	movf	_lenStr^0,w,c
   698   0006B4  0F03               	addlw	low _mystring
   699   0006B6  6ED9               	movwf	fsr2l,c
   700   0006B8  6ADA               	clrf	fsr2h,c
   701   0006BA  CFAE FFDF          	movff	4014,indf2	;volatile
   702   0006BE                     
   703                           ;setting_hardaware/uart.c: 69:     UART_Write(mystring[lenStr]);
   704   0006BE  5001               	movf	_lenStr^0,w,c
   705   0006C0  0F03               	addlw	low _mystring
   706   0006C2  6ED9               	movwf	fsr2l,c
   707   0006C4  6ADA               	clrf	fsr2h,c
   708   0006C6  50DF               	movf	indf2,w,c
   709   0006C8  EC77  F003         	call	_UART_Write
   710   0006CC                     
   711                           ;setting_hardaware/uart.c: 70:     lenStr++;
   712   0006CC  4A01               	infsnz	_lenStr^0,f,c
   713   0006CE  2A02               	incf	(_lenStr+1)^0,f,c
   714   0006D0                     
   715                           ;setting_hardaware/uart.c: 71:     lenStr %= 10;
   716   0006D0  C001  F02B         	movff	_lenStr,___awmod@dividend
   717   0006D4  C002  F02C         	movff	_lenStr+1,___awmod@dividend+1
   718   0006D8  0E00               	movlw	0
   719   0006DA  6E2E               	movwf	(___awmod@divisor+1)^0,c
   720   0006DC  0E0A               	movlw	10
   721   0006DE  6E2D               	movwf	___awmod@divisor^0,c
   722   0006E0  EC01  F003         	call	___awmod	;wreg free
   723   0006E4  C02B  F001         	movff	?___awmod,_lenStr
   724   0006E8  C02C  F002         	movff	?___awmod+1,_lenStr+1
   725   0006EC  0012               	return		;funcret
   726   0006EE                     __end_of_MyusartRead:
   727                           	callstack 0
   728                           
   729 ;; *************** function ___awmod *****************
   730 ;; Defined at:
   731 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
   732 ;; Parameters:    Size  Location     Type
   733 ;;  dividend        2    0[COMRAM] int 
   734 ;;  divisor         2    2[COMRAM] int 
   735 ;; Auto vars:     Size  Location     Type
   736 ;;  sign            1    5[COMRAM] unsigned char 
   737 ;;  counter         1    4[COMRAM] unsigned char 
   738 ;; Return value:  Size  Location     Type
   739 ;;                  2    0[COMRAM] int 
   740 ;; Registers used:
   741 ;;		wreg, status,2, status,0
   742 ;; Tracked objects:
   743 ;;		On entry : 0/0
   744 ;;		On exit  : 0/0
   745 ;;		Unchanged: 0/0
   746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   747 ;;      Params:         4       0       0       0       0       0       0
   748 ;;      Locals:         2       0       0       0       0       0       0
   749 ;;      Temps:          0       0       0       0       0       0       0
   750 ;;      Totals:         6       0       0       0       0       0       0
   751 ;;Total ram usage:        6 bytes
   752 ;; Hardware stack levels used: 1
   753 ;; Hardware stack levels required when called: 1
   754 ;; This function calls:
   755 ;;		Nothing
   756 ;; This function is called by:
   757 ;;		_MyusartRead
   758 ;; This function uses a non-reentrant model
   759 ;;
   760                           
   761                           	psect	text9
   762   000602                     __ptext9:
   763                           	callstack 0
   764   000602                     ___awmod:
   765                           	callstack 25
   766   000602  0E00               	movlw	0
   767   000604  6E30               	movwf	___awmod@sign^0,c
   768   000606  BE2C               	btfsc	(___awmod@dividend+1)^0,7,c
   769   000608  EF0A  F003         	goto	i1u16_20
   770   00060C  EF08  F003         	goto	i1u16_21
   771   000610                     i1u16_21:
   772   000610  EF10  F003         	goto	i1l1011
   773   000614                     i1u16_20:
   774   000614  6C2B               	negf	___awmod@dividend^0,c
   775   000616  1E2C               	comf	(___awmod@dividend+1)^0,f,c
   776   000618  B0D8               	btfsc	status,0,c
   777   00061A  2A2C               	incf	(___awmod@dividend+1)^0,f,c
   778   00061C  0E01               	movlw	1
   779   00061E  6E30               	movwf	___awmod@sign^0,c
   780   000620                     i1l1011:
   781   000620  BE2E               	btfsc	(___awmod@divisor+1)^0,7,c
   782   000622  EF17  F003         	goto	i1u17_20
   783   000626  EF15  F003         	goto	i1u17_21
   784   00062A                     i1u17_21:
   785   00062A  EF1B  F003         	goto	i1l1015
   786   00062E                     i1u17_20:
   787   00062E  6C2D               	negf	___awmod@divisor^0,c
   788   000630  1E2E               	comf	(___awmod@divisor+1)^0,f,c
   789   000632  B0D8               	btfsc	status,0,c
   790   000634  2A2E               	incf	(___awmod@divisor+1)^0,f,c
   791   000636                     i1l1015:
   792   000636  502D               	movf	___awmod@divisor^0,w,c
   793   000638  102E               	iorwf	(___awmod@divisor+1)^0,w,c
   794   00063A  B4D8               	btfsc	status,2,c
   795   00063C  EF22  F003         	goto	i1u18_21
   796   000640  EF24  F003         	goto	i1u18_20
   797   000644                     i1u18_21:
   798   000644  EF48  F003         	goto	i1l1031
   799   000648                     i1u18_20:
   800   000648  0E01               	movlw	1
   801   00064A  6E2F               	movwf	___awmod@counter^0,c
   802   00064C  EF2C  F003         	goto	i1l1021
   803   000650                     i1l1019:
   804   000650  90D8               	bcf	status,0,c
   805   000652  362D               	rlcf	___awmod@divisor^0,f,c
   806   000654  362E               	rlcf	(___awmod@divisor+1)^0,f,c
   807   000656  2A2F               	incf	___awmod@counter^0,f,c
   808   000658                     i1l1021:
   809   000658  AE2E               	btfss	(___awmod@divisor+1)^0,7,c
   810   00065A  EF31  F003         	goto	i1u19_21
   811   00065E  EF33  F003         	goto	i1u19_20
   812   000662                     i1u19_21:
   813   000662  EF28  F003         	goto	i1l1019
   814   000666                     i1u19_20:
   815   000666                     i1l1023:
   816   000666  502D               	movf	___awmod@divisor^0,w,c
   817   000668  5C2B               	subwf	___awmod@dividend^0,w,c
   818   00066A  502E               	movf	(___awmod@divisor+1)^0,w,c
   819   00066C  582C               	subwfb	(___awmod@dividend+1)^0,w,c
   820   00066E  A0D8               	btfss	status,0,c
   821   000670  EF3C  F003         	goto	i1u20_21
   822   000674  EF3E  F003         	goto	i1u20_20
   823   000678                     i1u20_21:
   824   000678  EF42  F003         	goto	i1l1027
   825   00067C                     i1u20_20:
   826   00067C  502D               	movf	___awmod@divisor^0,w,c
   827   00067E  5E2B               	subwf	___awmod@dividend^0,f,c
   828   000680  502E               	movf	(___awmod@divisor+1)^0,w,c
   829   000682  5A2C               	subwfb	(___awmod@dividend+1)^0,f,c
   830   000684                     i1l1027:
   831   000684  90D8               	bcf	status,0,c
   832   000686  322E               	rrcf	(___awmod@divisor+1)^0,f,c
   833   000688  322D               	rrcf	___awmod@divisor^0,f,c
   834   00068A  2E2F               	decfsz	___awmod@counter^0,f,c
   835   00068C  EF33  F003         	goto	i1l1023
   836   000690                     i1l1031:
   837   000690  5030               	movf	___awmod@sign^0,w,c
   838   000692  B4D8               	btfsc	status,2,c
   839   000694  EF4E  F003         	goto	i1u21_21
   840   000698  EF50  F003         	goto	i1u21_20
   841   00069C                     i1u21_21:
   842   00069C  EF54  F003         	goto	i1l1035
   843   0006A0                     i1u21_20:
   844   0006A0  6C2B               	negf	___awmod@dividend^0,c
   845   0006A2  1E2C               	comf	(___awmod@dividend+1)^0,f,c
   846   0006A4  B0D8               	btfsc	status,0,c
   847   0006A6  2A2C               	incf	(___awmod@dividend+1)^0,f,c
   848   0006A8                     i1l1035:
   849   0006A8  C02B  F02B         	movff	___awmod@dividend,?___awmod
   850   0006AC  C02C  F02C         	movff	___awmod@dividend+1,?___awmod+1
   851   0006B0  0012               	return		;funcret
   852   0006B2                     __end_of___awmod:
   853                           	callstack 0
   854                           
   855 ;; *************** function _UART_Write *****************
   856 ;; Defined at:
   857 ;;		line 41 in file "setting_hardaware/uart.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;  data            1    wreg     unsigned char 
   860 ;; Auto vars:     Size  Location     Type
   861 ;;  data            1    0[COMRAM] unsigned char 
   862 ;; Return value:  Size  Location     Type
   863 ;;                  1    wreg      void 
   864 ;; Registers used:
   865 ;;		wreg, status,2, status,0
   866 ;; Tracked objects:
   867 ;;		On entry : 0/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   871 ;;      Params:         0       0       0       0       0       0       0
   872 ;;      Locals:         1       0       0       0       0       0       0
   873 ;;      Temps:          0       0       0       0       0       0       0
   874 ;;      Totals:         1       0       0       0       0       0       0
   875 ;;Total ram usage:        1 bytes
   876 ;; Hardware stack levels used: 1
   877 ;; Hardware stack levels required when called: 1
   878 ;; This function calls:
   879 ;;		Nothing
   880 ;; This function is called by:
   881 ;;		_MyusartRead
   882 ;;		_UART_Write_Text
   883 ;; This function uses a non-reentrant model
   884 ;;
   885                           
   886                           	psect	text10
   887   0006EE                     __ptext10:
   888                           	callstack 0
   889   0006EE                     _UART_Write:
   890                           	callstack 25
   891                           
   892                           ;incstack = 0
   893                           ;UART_Write@data stored from wreg
   894   0006EE  6E2B               	movwf	UART_Write@data^0,c
   895   0006F0                     i1l126:
   896   0006F0  A2AC               	btfss	172,1,c	;volatile
   897   0006F2  EF7D  F003         	goto	i1u1_21
   898   0006F6  EF7F  F003         	goto	i1u1_20
   899   0006FA                     i1u1_21:
   900   0006FA  EF78  F003         	goto	i1l126
   901   0006FE                     i1u1_20:
   902   0006FE                     
   903                           ;setting_hardaware/uart.c: 44:     TXREG = data;
   904   0006FE  C02B  FFAD         	movff	UART_Write@data,4013	;volatile
   905   000702                     
   906                           ;setting_hardaware/uart.c: 45:     if(data == '\r'){
   907   000702  0E0D               	movlw	13
   908   000704  182B               	xorwf	UART_Write@data^0,w,c
   909   000706  A4D8               	btfss	status,2,c
   910   000708  EF88  F003         	goto	i1u2_21
   911   00070C  EF8A  F003         	goto	i1u2_20
   912   000710                     i1u2_21:
   913   000710  EF93  F003         	goto	i1l133
   914   000714                     i1u2_20:
   915   000714                     i1l130:
   916   000714  A2AC               	btfss	172,1,c	;volatile
   917   000716  EF8F  F003         	goto	i1u3_21
   918   00071A  EF91  F003         	goto	i1u3_20
   919   00071E                     i1u3_21:
   920   00071E  EF8A  F003         	goto	i1l130
   921   000722                     i1u3_20:
   922   000722                     
   923                           ;setting_hardaware/uart.c: 47:         TXREG = '\n';
   924   000722  0E0A               	movlw	10
   925   000724  6EAD               	movwf	173,c	;volatile
   926   000726                     i1l133:
   927   000726  0012               	return		;funcret
   928   000728                     __end_of_UART_Write:
   929                           	callstack 0
   930                           
   931 ;; *************** function _Hi_ISR *****************
   932 ;; Defined at:
   933 ;;		line 46 in file "main.c"
   934 ;; Parameters:    Size  Location     Type
   935 ;;		None
   936 ;; Auto vars:     Size  Location     Type
   937 ;;		None
   938 ;; Return value:  Size  Location     Type
   939 ;;                  1    wreg      void 
   940 ;; Registers used:
   941 ;;		None
   942 ;; Tracked objects:
   943 ;;		On entry : 0/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   947 ;;      Params:         0       0       0       0       0       0       0
   948 ;;      Locals:         0       0       0       0       0       0       0
   949 ;;      Temps:          0       0       0       0       0       0       0
   950 ;;      Totals:         0       0       0       0       0       0       0
   951 ;;Total ram usage:        0 bytes
   952 ;; Hardware stack levels used: 1
   953 ;; This function calls:
   954 ;;		Nothing
   955 ;; This function is called by:
   956 ;;		Interrupt level 2
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960                           	psect	intcode
   961   000008                     __pintcode:
   962                           	callstack 0
   963   000008                     _Hi_ISR:
   964                           	callstack 25
   965                           
   966                           ;incstack = 0
   967   000008  823B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   968   00000A  EDE4  F003         	call	int_func,f	;refresh shadow registers
   969                           
   970                           	psect	intcode_body
   971   0007C8                     __pintcode_body:
   972                           	callstack 25
   973   0007C8                     int_func:
   974                           	callstack 25
   975   0007C8  0006               	pop		; remove dummy address from shadow register refresh
   976   0007CA  923B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   977   0007CC  0011               	retfie		f
   978   0007CE                     __end_of_Hi_ISR:
   979                           	callstack 0
   980                           
   981                           	psect	smallconst
   982   000600                     __psmallconst:
   983                           	callstack 0
   984   000600  00                 	db	0
   985   000601  00                 	db	0	; dummy byte at the end
   986   000000                     
   987                           	psect	rparam
   988   000000                     
   989                           	psect	temp
   990   00003B                     btemp:
   991                           	callstack 0
   992   00003B                     	ds	1
   993   000000                     int$flags	set	btemp
   994   000000                     wtemp8	set	btemp+1
   995   000000                     ttemp5	set	btemp+1
   996   000000                     ttemp6	set	btemp+4
   997   000000                     ttemp7	set	btemp+8
   998                           
   999                           	psect	idloc
  1000                           
  1001                           ;Config register IDLOC0 @ 0x200000
  1002                           ;	unspecified, using default values
  1003   200000                     	org	2097152
  1004   200000  FF                 	db	255
  1005                           
  1006                           ;Config register IDLOC1 @ 0x200001
  1007                           ;	unspecified, using default values
  1008   200001                     	org	2097153
  1009   200001  FF                 	db	255
  1010                           
  1011                           ;Config register IDLOC2 @ 0x200002
  1012                           ;	unspecified, using default values
  1013   200002                     	org	2097154
  1014   200002  FF                 	db	255
  1015                           
  1016                           ;Config register IDLOC3 @ 0x200003
  1017                           ;	unspecified, using default values
  1018   200003                     	org	2097155
  1019   200003  FF                 	db	255
  1020                           
  1021                           ;Config register IDLOC4 @ 0x200004
  1022                           ;	unspecified, using default values
  1023   200004                     	org	2097156
  1024   200004  FF                 	db	255
  1025                           
  1026                           ;Config register IDLOC5 @ 0x200005
  1027                           ;	unspecified, using default values
  1028   200005                     	org	2097157
  1029   200005  FF                 	db	255
  1030                           
  1031                           ;Config register IDLOC6 @ 0x200006
  1032                           ;	unspecified, using default values
  1033   200006                     	org	2097158
  1034   200006  FF                 	db	255
  1035                           
  1036                           ;Config register IDLOC7 @ 0x200007
  1037                           ;	unspecified, using default values
  1038   200007                     	org	2097159
  1039   200007  FF                 	db	255
  1040                           
  1041                           	psect	config
  1042                           
  1043                           ; Padding undefined space
  1044   300000                     	org	3145728
  1045   300000  FF                 	db	255
  1046                           
  1047                           ;Config register CONFIG1H @ 0x300001
  1048                           ;	Oscillator Selection bits
  1049                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  1050                           ;	Fail-Safe Clock Monitor Enable bit
  1051                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1052                           ;	Internal/External Oscillator Switchover bit
  1053                           ;	IESO = ON, Oscillator Switchover mode enabled
  1054   300001                     	org	3145729
  1055   300001  88                 	db	136
  1056                           
  1057                           ;Config register CONFIG2L @ 0x300002
  1058                           ;	Power-up Timer Enable bit
  1059                           ;	PWRT = OFF, PWRT disabled
  1060                           ;	Brown-out Reset Enable bits
  1061                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1062                           ;	Brown Out Reset Voltage bits
  1063                           ;	BORV = 3, Minimum setting
  1064   300002                     	org	3145730
  1065   300002  1F                 	db	31
  1066                           
  1067                           ;Config register CONFIG2H @ 0x300003
  1068                           ;	Watchdog Timer Enable bit
  1069                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1070                           ;	Watchdog Timer Postscale Select bits
  1071                           ;	WDTPS = 1, 1:1
  1072   300003                     	org	3145731
  1073   300003  00                 	db	0
  1074                           
  1075                           ; Padding undefined space
  1076   300004                     	org	3145732
  1077   300004  FF                 	db	255
  1078                           
  1079                           ;Config register CONFIG3H @ 0x300005
  1080                           ;	CCP2 MUX bit
  1081                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1082                           ;	PORTB A/D Enable bit
  1083                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  1084                           ;	Low-Power Timer1 Oscillator Enable bit
  1085                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1086                           ;	MCLR Pin Enable bit
  1087                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1088   300005                     	org	3145733
  1089   300005  83                 	db	131
  1090                           
  1091                           ;Config register CONFIG4L @ 0x300006
  1092                           ;	Stack Full/Underflow Reset Enable bit
  1093                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1094                           ;	Single-Supply ICSP Enable bit
  1095                           ;	LVP = OFF, Single-Supply ICSP disabled
  1096                           ;	Extended Instruction Set Enable bit
  1097                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1098                           ;	Background Debugger Enable bit
  1099                           ;	DEBUG = 0x1, unprogrammed default
  1100   300006                     	org	3145734
  1101   300006  81                 	db	129
  1102                           
  1103                           ; Padding undefined space
  1104   300007                     	org	3145735
  1105   300007  FF                 	db	255
  1106                           
  1107                           ;Config register CONFIG5L @ 0x300008
  1108                           ;	Code Protection bit
  1109                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  1110                           ;	Code Protection bit
  1111                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  1112                           ;	Code Protection bit
  1113                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  1114                           ;	Code Protection bit
  1115                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  1116   300008                     	org	3145736
  1117   300008  0F                 	db	15
  1118                           
  1119                           ;Config register CONFIG5H @ 0x300009
  1120                           ;	Boot Block Code Protection bit
  1121                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1122                           ;	Data EEPROM Code Protection bit
  1123                           ;	CPD = OFF, Data EEPROM not code-protected
  1124   300009                     	org	3145737
  1125   300009  C0                 	db	192
  1126                           
  1127                           ;Config register CONFIG6L @ 0x30000A
  1128                           ;	Write Protection bit
  1129                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  1130                           ;	Write Protection bit
  1131                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  1132                           ;	Write Protection bit
  1133                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  1134                           ;	Write Protection bit
  1135                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  1136   30000A                     	org	3145738
  1137   30000A  0F                 	db	15
  1138                           
  1139                           ;Config register CONFIG6H @ 0x30000B
  1140                           ;	Configuration Register Write Protection bit
  1141                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1142                           ;	Boot Block Write Protection bit
  1143                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  1144                           ;	Data EEPROM Write Protection bit
  1145                           ;	WRTD = OFF, Data EEPROM not write-protected
  1146   30000B                     	org	3145739
  1147   30000B  E0                 	db	224
  1148                           
  1149                           ;Config register CONFIG7L @ 0x30000C
  1150                           ;	Table Read Protection bit
  1151                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  1152                           ;	Table Read Protection bit
  1153                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  1154                           ;	Table Read Protection bit
  1155                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  1156                           ;	Table Read Protection bit
  1157                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1158   30000C                     	org	3145740
  1159   30000C  0F                 	db	15
  1160                           
  1161                           ;Config register CONFIG7H @ 0x30000D
  1162                           ;	Boot Block Table Read Protection bit
  1163                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1164   30000D                     	org	3145741
  1165   30000D  40                 	db	64
  1166                           tosu	equ	0xFFF
  1167                           tosh	equ	0xFFE
  1168                           tosl	equ	0xFFD
  1169                           stkptr	equ	0xFFC
  1170                           pclatu	equ	0xFFB
  1171                           pclath	equ	0xFFA
  1172                           pcl	equ	0xFF9
  1173                           tblptru	equ	0xFF8
  1174                           tblptrh	equ	0xFF7
  1175                           tblptrl	equ	0xFF6
  1176                           tablat	equ	0xFF5
  1177                           prodh	equ	0xFF4
  1178                           prodl	equ	0xFF3
  1179                           indf0	equ	0xFEF
  1180                           postinc0	equ	0xFEE
  1181                           postdec0	equ	0xFED
  1182                           preinc0	equ	0xFEC
  1183                           plusw0	equ	0xFEB
  1184                           fsr0h	equ	0xFEA
  1185                           fsr0l	equ	0xFE9
  1186                           wreg	equ	0xFE8
  1187                           indf1	equ	0xFE7
  1188                           postinc1	equ	0xFE6
  1189                           postdec1	equ	0xFE5
  1190                           preinc1	equ	0xFE4
  1191                           plusw1	equ	0xFE3
  1192                           fsr1h	equ	0xFE2
  1193                           fsr1l	equ	0xFE1
  1194                           bsr	equ	0xFE0
  1195                           indf2	equ	0xFDF
  1196                           postinc2	equ	0xFDE
  1197                           postdec2	equ	0xFDD
  1198                           preinc2	equ	0xFDC
  1199                           plusw2	equ	0xFDB
  1200                           fsr2h	equ	0xFDA
  1201                           fsr2l	equ	0xFD9
  1202                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         42
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     16      58
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    sp__GetString	PTR unsigned char  size(1) Largest target is 20
		 -> mystring(COMRAM[20]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 20
		 -> str(COMRAM[20]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 20
		 -> str(COMRAM[20]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 20
		 -> str(COMRAM[20]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 20
		 -> mystring(COMRAM[20]), 


Critical Paths under _main in COMRAM

    _main->_strcpy
    _strcpy->_GetString

Critical Paths under _Lo_ISR in COMRAM

    _MyusartRead->___awmod

Critical Paths under _Hi_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Lo_ISR in BANK0

    None.

Critical Paths under _Hi_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _Hi_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _Hi_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _Hi_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _Hi_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Critical Paths under _Hi_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     225
                          _GetString
                  _SYSTEM_Initialize
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               3     1      2     225
                                             13 COMRAM     3     1      2
                          _GetString (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
                    _UART_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetString                                            2     0      2       0
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Lo_ISR                                               5     5      0     478
                                              6 COMRAM     5     5      0
                        _MyusartRead
 ---------------------------------------------------------------------------------
 (4) _MyusartRead                                          0     0      0     478
                         _UART_Write
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _UART_Write                                           1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Hi_ISR                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GetString
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _UART_Initialize
   _strcpy
     _GetString (ARG)

 _Lo_ISR (ROOT)
   _MyusartRead
     _UART_Write
     ___awmod

 _Hi_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      31        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            F4      0       0      13        0.0%
BANK5               F4      0       0      14        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     10      3A       1       46.0%
BITBIGSFR_1llhl      B      0       0      25        0.0%
BITBIGSFR_1hhl       B      0       0      21        0.0%
BITBIGSFRll          B      0       0      29        0.0%
BITBIGSFR_5h         A      0       0      15        0.0%
BITBIGSFR_1llhh      8      0       0      24        0.0%
BITBIGSFRhh          7      0       0      26        0.0%
BITBIGSFRlh          6      0       0      28        0.0%
BITBIGSFR_2          6      0       0      19        0.0%
BITBIGSFR_1llhh      4      0       0      23        0.0%
BITBIGSFR_4          3      0       0      17        0.0%
BITBIGSFR_3          3      0       0      18        0.0%
BITBIGSFR_1hhh       2      0       0      20        0.0%
BITBIGSFR_1lh        2      0       0      22        0.0%
BITBIGSFR_5l         2      0       0      16        0.0%
BITBIGSFRhl          1      0       0      27        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3A      30        0.0%
DATA                 0      0      3A      32        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Jan 09 20:56:17 2024

                           l90 07BE                             l68 07C6                             l87 07B6  
                           bsr 0FE0                            l123 0772                            l150 07D0  
                          l911 07A4                            l841 07B8                            l913 07A8  
                          l851 0764                            l843 0752                            l915 07AA  
                          l861 076E                            l853 0766                            l845 075C  
                          l917 07AE                            l837 0750                            l839 07C0  
                          l863 0770                            l855 0768                            l847 0760  
                          l919 07B2                            l857 076A                            l849 0762  
                          l859 076C                            u220 0750                            u221 074C  
                          _str 0017                   ___awmod@sign 0030                            wreg 0FE8  
                         l1043 0728                           l1045 072C                           l1039 07CE  
                         l1057 0774                           l1059 0778                           _ADFM 7E07  
                         _CREN 7D5C                           _RCIF 7CF5                           i2l27 07CA  
                         _main 0774                           fsr1h 0FE2                           fsr2h 0FDA  
                         indf1 0FE7                           indf2 0FDF                           fsr1l 0FE1  
                         fsr2l 0FD9                           btemp 003B                           start 006C  
                 ___param_bank 0000               ?_UART_Initialize 002B  __end_of_OSCILLATOR_Initialize 07C0  
                        ?_main 002B                __end_of___awmod 06B2                          _IRCF0 7E9C  
                        _IRCF1 7E9D                          _IRCF2 7E9E                          i1l130 0714  
                        i1l133 0726                          i1l126 06F0                          i1l147 06EC  
                        i1l404 06B0                          i1l157 0054                          i1l873 0722  
                        i1l865 06F0                          i1l867 06FE                          i1l869 0702  
                        _RCREG 0FAE                          _SPBRG 0FAF                          _TRISA 0F92  
                        _TRISC 0F94                          _TXREG 0FAD                    ?_UART_Write 002B  
                        ttemp5 003C                          ttemp6 003F                          ttemp7 0043  
                        status 0FD8                          wtemp8 003C                __initialization 078E  
                 __end_of_main 078E                         ??_main 003B                  __activetblptr 0000  
                       _ADCON1 0FC1                         _ADRESH 0FC4                         _ADRESL 0FC3  
                       i1l1011 0620                         i1l1003 0602                         i1l1021 0658  
                       i1l1013 062E                         i1l1005 0606                         i1l1023 0666  
                       i1l1031 0690                         i1l1015 0636                         i1l1007 0614  
                       i1l1033 06A0                         i1l1025 067C                         i1l1017 0648  
                       i1l1009 061C                         i1l1035 06A8                         i1l1027 0684  
                       i1l1019 0650                         i1l1051 06CC                         i1l1029 068A  
                       i1l1053 06D0                         i1l1061 002E                         i1l1047 06B2  
                       i1l1063 003C                         i1l1049 06BE                         i1l1065 004A  
                       i1l1067 0050                         i1u1_20 06FE                         i1u1_21 06FA  
                       i1u2_20 0714                         i1u2_21 0710                         i1u3_20 0722  
                       i1u3_21 071E                         _Hi_ISR 0008                         _Lo_ISR 0018  
                    ??___awmod 002F                         _lenStr 0001                         clear_0 0794  
              ___awmod@divisor 002D                         isa$std 0001                ___awmod@counter 002F  
                       _strcpy 0728                   __mediumconst 0000              _SYSTEM_Initialize 07A4  
                   __accesstop 0080        __end_of__initialization 079A             ?_SYSTEM_Initialize 002B  
                ___rparam_used 0001              __end_of_GetString 07D2                 __pcstackCOMRAM 002B  
          ??_SYSTEM_Initialize 0036                  ??_MyusartRead 0031      __end_of_SYSTEM_Initialize 07B8  
                      ?_Hi_ISR 002B                        ?_Lo_ISR 002B                        _CCP1CON 0FBD  
                      ?_strcpy 0038                        i1u20_20 067C                        i1u20_21 0678  
                      i1u21_20 06A0                        i1u21_21 069C                   ??_UART_Write 002B  
                      i1u23_20 003C                        i1u23_21 0038                        i1u16_20 0614  
                      i1u24_20 004A                        i1u16_21 0610                        i1u24_21 0046  
                      i1u17_20 062E                        i1u17_21 062A                        i1u18_20 0648  
                      i1u18_21 0644                        i1u19_20 0666                        i1u19_21 0662  
          __end_of_MyusartRead 06EE                        __Hparam 0000                        __Lparam 0000  
                      ___awmod 0602             __end_of_UART_Write 0728                   __psmallconst 0600  
                      __pcinit 078E                        __ramtop 0600                        __ptext0 0774  
                      __ptext1 0728                        __ptext2 07A4                        __ptext3 0752  
                      __ptext4 07B8                        __ptext5 07C0                        __ptext6 07CE  
                      __ptext8 06B2                        __ptext9 0602          _OSCILLATOR_Initialize 07B8  
             ___awmod@dividend 002B                 __pintcode_body 07C8           end_of_initialization 079A  
                      int_func 07C8                      _RCSTAbits 0FAB                        postinc0 0FEE  
                      strcpy@d 003A                 UART_Write@data 002B                      _TRISCbits 0F94  
                  _MyusartRead 06B2                      _TXSTAbits 0FAC                 __end_of_Hi_ISR 07CE  
               __end_of_Lo_ISR 006C   __end_of_INTERRUPT_Initialize 07C8                      _GetString 07CE  
                  _BAUDCONbits 0FB8         ?_OSCILLATOR_Initialize 002B                 __end_of_strcpy 0752  
          start_initialization 078E              ??_UART_Initialize 0036                       ??_Hi_ISR 002B  
                     ??_Lo_ISR 0031                     ?_GetString 0036                       ??_strcpy 003A  
                  __pbssCOMRAM 0001                      __pintcode 0008                       ?___awmod 002B  
                  __pintcodelo 0018                    __smallconst 0600           _INTERRUPT_Initialize 07C0  
                     _LATCbits 0F8B                       _IPR1bits 0F9F                       _PIE1bits 0F9D  
                     _PIR1bits 0F9E                       _RCONbits 0FD0                    ??_GetString 0038  
                   _ADCON0bits 0FC2                     _ADCON2bits 0FC0                   ?_MyusartRead 002B  
        ?_INTERRUPT_Initialize 002B                       __Hrparam 0000                       __Lrparam 0000  
      ??_OSCILLATOR_Initialize 0036                _UART_Initialize 0752                       __ptext10 06EE  
                   strcpy@dest 0038                       isa$xinst 0000                       int$flags 003B  
                     _mystring 0003                     _INTCONbits 0FF2         ??_INTERRUPT_Initialize 0036  
                     intlevel1 0000                       intlevel2 0000                      strcpy@src 0039  
      __end_of_UART_Initialize 0774                     _UART_Write 06EE  
