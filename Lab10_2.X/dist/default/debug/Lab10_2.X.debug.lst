

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Dec 21 03:41:36 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    27                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    29   000000                     
    30                           ; Generated 18/08/2023 GMT
    31                           ; 
    32                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F4520 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64   000000                     _RCREG	set	4014
    65   000000                     _TXREG	set	4013
    66   000000                     _PIE1bits	set	3997
    67   000000                     _SPBRG	set	4015
    68   000000                     _BAUDCONbits	set	4024
    69   000000                     _TRISB	set	3987
    70   000000                     _PIR1bits	set	3998
    71   000000                     _CCP1CON	set	4029
    72   000000                     _TRISCbits	set	3988
    73   000000                     _ADCON0bits	set	4034
    74   000000                     _ADRESL	set	4035
    75   000000                     _ADRESH	set	4036
    76   000000                     _ADCON1	set	4033
    77   000000                     _ADFM	set	32263
    78   000000                     _ADCON2bits	set	4032
    79   000000                     _CREN	set	32092
    80   000000                     _RCIF	set	31989
    81   000000                     _IRCF0	set	32412
    82   000000                     _IRCF1	set	32413
    83   000000                     _LATC	set	3979
    84   000000                     _INTCONbits	set	4082
    85   000000                     _TRISA	set	3986
    86   000000                     _RCONbits	set	4048
    87   000000                     _RCSTAbits	set	4011
    88   000000                     _TXSTAbits	set	4012
    89   000000                     _IPR1bits	set	3999
    90   000000                     _IRCF2	set	32414
    91                           
    92                           ; #config settings
    93                           
    94                           	psect	cinit
    95   00088A                     __pcinit:
    96                           	callstack 0
    97   00088A                     start_initialization:
    98                           	callstack 0
    99   00088A                     __initialization:
   100                           	callstack 0
   101                           
   102                           ; Clear objects allocated to COMRAM (42 bytes)
   103   00088A  EE00  F001         	lfsr	0,__pbssCOMRAM
   104   00088E  0E2A               	movlw	42
   105   000890                     clear_0:
   106   000890  6AEE               	clrf	postinc0,c
   107   000892  06E8               	decf	wreg,f,c
   108   000894  E1FD               	bnz	clear_0
   109   000896                     end_of_initialization:
   110                           	callstack 0
   111   000896                     __end_of__initialization:
   112                           	callstack 0
   113   000896  903C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   114   000898  923C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   115   00089A  0100               	movlb	0
   116   00089C  EF12  F004         	goto	_main	;jump to C main() function
   117                           
   118                           	psect	bssCOMRAM
   119   000001                     __pbssCOMRAM:
   120                           	callstack 0
   121   000001                     _lenStr:
   122                           	callstack 0
   123   000001                     	ds	2
   124   000003                     _mystring:
   125                           	callstack 0
   126   000003                     	ds	20
   127   000017                     _str:
   128                           	callstack 0
   129   000017                     	ds	20
   130                           
   131                           	psect	cstackCOMRAM
   132   00002B                     __pcstackCOMRAM:
   133                           	callstack 0
   134   00002B                     i2UART_Write@data:
   135                           	callstack 0
   136                           
   137                           ; 1 bytes @ 0x0
   138   00002B                     	ds	1
   139   00002C                     ?___awmod:
   140                           	callstack 0
   141   00002C                     i1UART_Write@data:
   142                           	callstack 0
   143   00002C                     ___awmod@dividend:
   144                           	callstack 0
   145                           
   146                           ; 2 bytes @ 0x1
   147   00002C                     	ds	2
   148   00002E                     ___awmod@divisor:
   149                           	callstack 0
   150                           
   151                           ; 2 bytes @ 0x3
   152   00002E                     	ds	2
   153   000030                     ___awmod@counter:
   154                           	callstack 0
   155                           
   156                           ; 1 bytes @ 0x5
   157   000030                     	ds	1
   158   000031                     ___awmod@sign:
   159                           	callstack 0
   160                           
   161                           ; 1 bytes @ 0x6
   162   000031                     	ds	1
   163   000032                     ??_Lo_ISR:
   164                           
   165                           ; 1 bytes @ 0x7
   166   000032                     	ds	5
   167   000037                     UART_Write@data:
   168                           	callstack 0
   169                           
   170                           ; 1 bytes @ 0xC
   171   000037                     	ds	2
   172   000039                     strcpy@dest:
   173                           	callstack 0
   174                           
   175                           ; 1 bytes @ 0xE
   176   000039                     	ds	1
   177   00003A                     strcpy@src:
   178                           	callstack 0
   179                           
   180                           ; 1 bytes @ 0xF
   181   00003A                     	ds	1
   182   00003B                     strcpy@d:
   183                           	callstack 0
   184                           
   185                           ; 1 bytes @ 0x10
   186   00003B                     	ds	1
   187   00003C                     
   188                           ; 1 bytes @ 0x11
   189 ;;
   190 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   191 ;;
   192 ;; *************** function _main *****************
   193 ;; Defined at:
   194 ;;		line 14 in file "main.c"
   195 ;; Parameters:    Size  Location     Type
   196 ;;		None
   197 ;; Auto vars:     Size  Location     Type
   198 ;;		None
   199 ;; Return value:  Size  Location     Type
   200 ;;                  1    wreg      void 
   201 ;; Registers used:
   202 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   203 ;; Tracked objects:
   204 ;;		On entry : 0/0
   205 ;;		On exit  : 0/0
   206 ;;		Unchanged: 0/0
   207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   208 ;;      Params:         0       0       0       0       0       0       0
   209 ;;      Locals:         0       0       0       0       0       0       0
   210 ;;      Temps:          0       0       0       0       0       0       0
   211 ;;      Totals:         0       0       0       0       0       0       0
   212 ;;Total ram usage:        0 bytes
   213 ;; Hardware stack levels required when called: 7
   214 ;; This function calls:
   215 ;;		_GetString
   216 ;;		_SYSTEM_Initialize
   217 ;;		_UART_Write
   218 ;;		_strcpy
   219 ;; This function is called by:
   220 ;;		Startup code after reset
   221 ;; This function uses a non-reentrant model
   222 ;;
   223                           
   224                           	psect	text0
   225   000824                     __ptext0:
   226                           	callstack 0
   227   000824                     _main:
   228                           	callstack 24
   229   000824                     
   230                           ;main.c: 17:     SYSTEM_Initialize() ;
   231   000824  EC36  F004         	call	_SYSTEM_Initialize	;wreg free
   232   000828                     
   233                           ;main.c: 18:     UART_Write('0');
   234   000828  0E30               	movlw	48
   235   00082A  ECA6  F003         	call	_UART_Write
   236   00082E                     
   237                           ;main.c: 19:     UART_Write(' ');
   238   00082E  0E20               	movlw	32
   239   000830  ECA6  F003         	call	_UART_Write
   240   000834                     l1137:
   241                           
   242                           ;main.c: 21:         strcpy(str, GetString());
   243   000834  0E17               	movlw	low _str
   244   000836  6E39               	movwf	strcpy@dest^0,c
   245   000838  EC5C  F004         	call	_GetString	;wreg free
   246   00083C  6E3A               	movwf	strcpy@src^0,c
   247   00083E  ECFD  F003         	call	_strcpy	;wreg free
   248   000842  EF1A  F004         	goto	l1137
   249   000846  EF36  F000         	goto	start
   250   00084A                     __end_of_main:
   251                           	callstack 0
   252                           
   253 ;; *************** function _strcpy *****************
   254 ;; Defined at:
   255 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strcpy.c"
   256 ;; Parameters:    Size  Location     Type
   257 ;;  dest            1   14[COMRAM] PTR unsigned char 
   258 ;;		 -> str(20), 
   259 ;;  src             1   15[COMRAM] PTR const unsigned char 
   260 ;;		 -> mystring(20), 
   261 ;; Auto vars:     Size  Location     Type
   262 ;;  d               1   16[COMRAM] PTR unsigned char 
   263 ;;		 -> str(20), 
   264 ;; Return value:  Size  Location     Type
   265 ;;                  1    wreg      PTR unsigned char 
   266 ;; Registers used:
   267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   268 ;; Tracked objects:
   269 ;;		On entry : 0/0
   270 ;;		On exit  : 0/0
   271 ;;		Unchanged: 0/0
   272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   273 ;;      Params:         2       0       0       0       0       0       0
   274 ;;      Locals:         1       0       0       0       0       0       0
   275 ;;      Temps:          0       0       0       0       0       0       0
   276 ;;      Totals:         3       0       0       0       0       0       0
   277 ;;Total ram usage:        3 bytes
   278 ;; Hardware stack levels used: 1
   279 ;; Hardware stack levels required when called: 5
   280 ;; This function calls:
   281 ;;		Nothing
   282 ;; This function is called by:
   283 ;;		_main
   284 ;; This function uses a non-reentrant model
   285 ;;
   286                           
   287                           	psect	text1
   288   0007FA                     __ptext1:
   289                           	callstack 0
   290   0007FA                     _strcpy:
   291                           	callstack 25
   292   0007FA  C039  F03B         	movff	strcpy@dest,strcpy@d
   293   0007FE                     l1109:
   294   0007FE  2A3A               	incf	strcpy@src^0,f,c
   295   000800  043A               	decf	strcpy@src^0,w,c
   296   000802  6ED9               	movwf	fsr2l,c
   297   000804  6ADA               	clrf	fsr2h,c
   298   000806  2A3B               	incf	strcpy@d^0,f,c
   299   000808  043B               	decf	strcpy@d^0,w,c
   300   00080A  6EE1               	movwf	fsr1l,c
   301   00080C  6AE2               	clrf	fsr1h,c
   302   00080E  CFDF FFE7          	movff	indf2,indf1
   303   000812  50E7               	movf	indf1,w,c
   304   000814  A4D8               	btfss	status,2,c
   305   000816  EF0F  F004         	goto	u341
   306   00081A  EF11  F004         	goto	u340
   307   00081E                     u341:
   308   00081E  EFFF  F003         	goto	l1109
   309   000822                     u340:
   310   000822  0012               	return		;funcret
   311   000824                     __end_of_strcpy:
   312                           	callstack 0
   313                           
   314 ;; *************** function _UART_Write *****************
   315 ;; Defined at:
   316 ;;		line 41 in file "setting_hardaware/uart.c"
   317 ;; Parameters:    Size  Location     Type
   318 ;;  data            1    wreg     unsigned char 
   319 ;; Auto vars:     Size  Location     Type
   320 ;;  data            1   12[COMRAM] unsigned char 
   321 ;; Return value:  Size  Location     Type
   322 ;;                  1    wreg      void 
   323 ;; Registers used:
   324 ;;		wreg, status,2, status,0
   325 ;; Tracked objects:
   326 ;;		On entry : 0/0
   327 ;;		On exit  : 0/0
   328 ;;		Unchanged: 0/0
   329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   330 ;;      Params:         0       0       0       0       0       0       0
   331 ;;      Locals:         1       0       0       0       0       0       0
   332 ;;      Temps:          0       0       0       0       0       0       0
   333 ;;      Totals:         1       0       0       0       0       0       0
   334 ;;Total ram usage:        1 bytes
   335 ;; Hardware stack levels used: 1
   336 ;; Hardware stack levels required when called: 5
   337 ;; This function calls:
   338 ;;		Nothing
   339 ;; This function is called by:
   340 ;;		_main
   341 ;;		_UART_Write_Text
   342 ;; This function uses a non-reentrant model
   343 ;;
   344                           
   345                           	psect	text2
   346   00074C                     __ptext2:
   347                           	callstack 0
   348   00074C                     _UART_Write:
   349                           	callstack 25
   350                           
   351                           ;incstack = 0
   352                           ;UART_Write@data stored from wreg
   353   00074C  6E37               	movwf	UART_Write@data^0,c
   354   00074E                     l140:
   355   00074E  A2AC               	btfss	172,1,c	;volatile
   356   000750  EFAC  F003         	goto	u101
   357   000754  EFAE  F003         	goto	u100
   358   000758                     u101:
   359   000758  EFA7  F003         	goto	l140
   360   00075C                     u100:
   361   00075C                     
   362                           ;setting_hardaware/uart.c: 44:     TXREG = data;
   363   00075C  C037  FFAD         	movff	UART_Write@data,4013	;volatile
   364   000760                     
   365                           ;setting_hardaware/uart.c: 45:     if(data == '\r'){
   366   000760  0E0D               	movlw	13
   367   000762  1837               	xorwf	UART_Write@data^0,w,c
   368   000764  A4D8               	btfss	status,2,c
   369   000766  EFB7  F003         	goto	u111
   370   00076A  EFB9  F003         	goto	u110
   371   00076E                     u111:
   372   00076E  EFC2  F003         	goto	l147
   373   000772                     u110:
   374   000772                     l144:
   375   000772  A2AC               	btfss	172,1,c	;volatile
   376   000774  EFBE  F003         	goto	u121
   377   000778  EFC0  F003         	goto	u120
   378   00077C                     u121:
   379   00077C  EFB9  F003         	goto	l144
   380   000780                     u120:
   381   000780                     
   382                           ;setting_hardaware/uart.c: 47:         TXREG = '\n';
   383   000780  0E0A               	movlw	10
   384   000782  6EAD               	movwf	173,c	;volatile
   385   000784                     l147:
   386   000784  0012               	return		;funcret
   387   000786                     __end_of_UART_Write:
   388                           	callstack 0
   389                           
   390 ;; *************** function _SYSTEM_Initialize *****************
   391 ;; Defined at:
   392 ;;		line 60 in file "setting_hardaware/setting.c"
   393 ;; Parameters:    Size  Location     Type
   394 ;;		None
   395 ;; Auto vars:     Size  Location     Type
   396 ;;		None
   397 ;; Return value:  Size  Location     Type
   398 ;;                  1    wreg      void 
   399 ;; Registers used:
   400 ;;		wreg, status,2, cstack
   401 ;; Tracked objects:
   402 ;;		On entry : 0/0
   403 ;;		On exit  : 0/0
   404 ;;		Unchanged: 0/0
   405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   406 ;;      Params:         0       0       0       0       0       0       0
   407 ;;      Locals:         0       0       0       0       0       0       0
   408 ;;      Temps:          0       0       0       0       0       0       0
   409 ;;      Totals:         0       0       0       0       0       0       0
   410 ;;Total ram usage:        0 bytes
   411 ;; Hardware stack levels used: 1
   412 ;; Hardware stack levels required when called: 6
   413 ;; This function calls:
   414 ;;		_INTERRUPT_Initialize
   415 ;;		_OSCILLATOR_Initialize
   416 ;;		_UART_Initialize
   417 ;; This function is called by:
   418 ;;		_main
   419 ;; This function uses a non-reentrant model
   420 ;;
   421                           
   422                           	psect	text3
   423   00086C                     __ptext3:
   424                           	callstack 0
   425   00086C                     _SYSTEM_Initialize:
   426                           	callstack 24
   427   00086C                     
   428                           ;setting_hardaware/setting.c: 63:     ADCON1 = 0x0f;
   429   00086C  0E0F               	movlw	15
   430   00086E  6EC1               	movwf	193,c	;volatile
   431   000870                     
   432                           ;setting_hardaware/setting.c: 64:     TRISCbits.TRISC0 = TRISCbits.TRISC1 = TRISCbits.TR
      +                          ISC2 = TRISCbits.TRISC3 = 0;
   433   000870  9694               	bcf	148,3,c	;volatile
   434   000872  9494               	bcf	148,2,c	;volatile
   435   000874  9294               	bcf	148,1,c	;volatile
   436   000876  9094               	bcf	148,0,c	;volatile
   437                           
   438                           ;setting_hardaware/setting.c: 65:     LATC = 0;
   439   000878  0E00               	movlw	0
   440   00087A  6E8B               	movwf	139,c	;volatile
   441   00087C                     
   442                           ;setting_hardaware/setting.c: 67:     OSCILLATOR_Initialize();
   443   00087C  EC58  F004         	call	_OSCILLATOR_Initialize	;wreg free
   444                           
   445                           ;setting_hardaware/setting.c: 71:     INTERRUPT_Initialize();
   446   000880  EC50  F004         	call	_INTERRUPT_Initialize	;wreg free
   447                           
   448                           ;setting_hardaware/setting.c: 72:     UART_Initialize();
   449   000884  EC25  F004         	call	_UART_Initialize	;wreg free
   450   000888  0012               	return		;funcret
   451   00088A                     __end_of_SYSTEM_Initialize:
   452                           	callstack 0
   453                           
   454 ;; *************** function _UART_Initialize *****************
   455 ;; Defined at:
   456 ;;		line 7 in file "setting_hardaware/uart.c"
   457 ;; Parameters:    Size  Location     Type
   458 ;;		None
   459 ;; Auto vars:     Size  Location     Type
   460 ;;		None
   461 ;; Return value:  Size  Location     Type
   462 ;;                  1    wreg      void 
   463 ;; Registers used:
   464 ;;		wreg, status,2
   465 ;; Tracked objects:
   466 ;;		On entry : 0/0
   467 ;;		On exit  : 0/0
   468 ;;		Unchanged: 0/0
   469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   470 ;;      Params:         0       0       0       0       0       0       0
   471 ;;      Locals:         0       0       0       0       0       0       0
   472 ;;      Temps:          0       0       0       0       0       0       0
   473 ;;      Totals:         0       0       0       0       0       0       0
   474 ;;Total ram usage:        0 bytes
   475 ;; Hardware stack levels used: 1
   476 ;; Hardware stack levels required when called: 5
   477 ;; This function calls:
   478 ;;		Nothing
   479 ;; This function is called by:
   480 ;;		_SYSTEM_Initialize
   481 ;; This function uses a non-reentrant model
   482 ;;
   483                           
   484                           	psect	text4
   485   00084A                     __ptext4:
   486                           	callstack 0
   487   00084A                     _UART_Initialize:
   488                           	callstack 24
   489   00084A                     
   490                           ;setting_hardaware/uart.c: 18:     TRISCbits.TRISC6 = 1;
   491   00084A  8C94               	bsf	148,6,c	;volatile
   492                           
   493                           ;setting_hardaware/uart.c: 19:     TRISCbits.TRISC7 = 1;
   494   00084C  8E94               	bsf	148,7,c	;volatile
   495                           
   496                           ;setting_hardaware/uart.c: 22:     TXSTAbits.SYNC = 0;
   497   00084E  98AC               	bcf	172,4,c	;volatile
   498                           
   499                           ;setting_hardaware/uart.c: 23:     TXSTAbits.BRGH = 0;
   500   000850  94AC               	bcf	172,2,c	;volatile
   501                           
   502                           ;setting_hardaware/uart.c: 24:     BAUDCONbits.BRG16 = 0;
   503   000852  96B8               	bcf	184,3,c	;volatile
   504   000854                     
   505                           ;setting_hardaware/uart.c: 25:     SPBRG = 51;
   506   000854  0E33               	movlw	51
   507   000856  6EAF               	movwf	175,c	;volatile
   508   000858                     
   509                           ;setting_hardaware/uart.c: 28:     RCSTAbits.SPEN = 1;
   510   000858  8EAB               	bsf	171,7,c	;volatile
   511   00085A                     
   512                           ;setting_hardaware/uart.c: 29:     PIR1bits.TXIF = 1;
   513   00085A  889E               	bsf	158,4,c	;volatile
   514   00085C                     
   515                           ;setting_hardaware/uart.c: 30:     PIR1bits.RCIF = 0;
   516   00085C  9A9E               	bcf	158,5,c	;volatile
   517   00085E                     
   518                           ;setting_hardaware/uart.c: 31:     TXSTAbits.TXEN = 1;
   519   00085E  8AAC               	bsf	172,5,c	;volatile
   520   000860                     
   521                           ;setting_hardaware/uart.c: 32:     RCSTAbits.CREN = 1;
   522   000860  88AB               	bsf	171,4,c	;volatile
   523   000862                     
   524                           ;setting_hardaware/uart.c: 34:     PIE1bits.TXIE = 0;
   525   000862  989D               	bcf	157,4,c	;volatile
   526   000864                     
   527                           ;setting_hardaware/uart.c: 35:     IPR1bits.TXIP = 0;
   528   000864  989F               	bcf	159,4,c	;volatile
   529   000866                     
   530                           ;setting_hardaware/uart.c: 36:     PIE1bits.RCIE = 1;
   531   000866  8A9D               	bsf	157,5,c	;volatile
   532   000868                     
   533                           ;setting_hardaware/uart.c: 37:     IPR1bits.RCIP = 0;
   534   000868  9A9F               	bcf	159,5,c	;volatile
   535   00086A  0012               	return		;funcret
   536   00086C                     __end_of_UART_Initialize:
   537                           	callstack 0
   538                           
   539 ;; *************** function _OSCILLATOR_Initialize *****************
   540 ;; Defined at:
   541 ;;		line 77 in file "setting_hardaware/setting.c"
   542 ;; Parameters:    Size  Location     Type
   543 ;;		None
   544 ;; Auto vars:     Size  Location     Type
   545 ;;		None
   546 ;; Return value:  Size  Location     Type
   547 ;;                  1    wreg      void 
   548 ;; Registers used:
   549 ;;		None
   550 ;; Tracked objects:
   551 ;;		On entry : 0/0
   552 ;;		On exit  : 0/0
   553 ;;		Unchanged: 0/0
   554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   555 ;;      Params:         0       0       0       0       0       0       0
   556 ;;      Locals:         0       0       0       0       0       0       0
   557 ;;      Temps:          0       0       0       0       0       0       0
   558 ;;      Totals:         0       0       0       0       0       0       0
   559 ;;Total ram usage:        0 bytes
   560 ;; Hardware stack levels used: 1
   561 ;; Hardware stack levels required when called: 5
   562 ;; This function calls:
   563 ;;		Nothing
   564 ;; This function is called by:
   565 ;;		_SYSTEM_Initialize
   566 ;; This function uses a non-reentrant model
   567 ;;
   568                           
   569                           	psect	text5
   570   0008B0                     __ptext5:
   571                           	callstack 0
   572   0008B0                     _OSCILLATOR_Initialize:
   573                           	callstack 24
   574   0008B0                     
   575                           ;setting_hardaware/setting.c: 79:     IRCF2 = 1;
   576   0008B0  8CD3               	bsf	4051,6,c	;volatile
   577                           
   578                           ;setting_hardaware/setting.c: 80:     IRCF1 = 1;
   579   0008B2  8AD3               	bsf	4051,5,c	;volatile
   580                           
   581                           ;setting_hardaware/setting.c: 81:     IRCF0 = 0;
   582   0008B4  98D3               	bcf	4051,4,c	;volatile
   583   0008B6  0012               	return		;funcret
   584   0008B8                     __end_of_OSCILLATOR_Initialize:
   585                           	callstack 0
   586                           
   587 ;; *************** function _INTERRUPT_Initialize *****************
   588 ;; Defined at:
   589 ;;		line 3 in file "setting_hardaware/interrupt_manager.c"
   590 ;; Parameters:    Size  Location     Type
   591 ;;		None
   592 ;; Auto vars:     Size  Location     Type
   593 ;;		None
   594 ;; Return value:  Size  Location     Type
   595 ;;                  1    wreg      void 
   596 ;; Registers used:
   597 ;;		wreg, status,2
   598 ;; Tracked objects:
   599 ;;		On entry : 0/0
   600 ;;		On exit  : 0/0
   601 ;;		Unchanged: 0/0
   602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   603 ;;      Params:         0       0       0       0       0       0       0
   604 ;;      Locals:         0       0       0       0       0       0       0
   605 ;;      Temps:          0       0       0       0       0       0       0
   606 ;;      Totals:         0       0       0       0       0       0       0
   607 ;;Total ram usage:        0 bytes
   608 ;; Hardware stack levels used: 1
   609 ;; Hardware stack levels required when called: 5
   610 ;; This function calls:
   611 ;;		Nothing
   612 ;; This function is called by:
   613 ;;		_SYSTEM_Initialize
   614 ;; This function uses a non-reentrant model
   615 ;;
   616                           
   617                           	psect	text6
   618   0008A0                     __ptext6:
   619                           	callstack 0
   620   0008A0                     _INTERRUPT_Initialize:
   621                           	callstack 24
   622   0008A0                     
   623                           ;setting_hardaware/interrupt_manager.c: 5:     RCONbits.IPEN = 1;
   624   0008A0  8ED0               	bsf	208,7,c	;volatile
   625                           
   626                           ;setting_hardaware/interrupt_manager.c: 6:     INTCONbits.GIEH = 1;
   627   0008A2  8EF2               	bsf	242,7,c	;volatile
   628                           
   629                           ;setting_hardaware/interrupt_manager.c: 7:     INTCONbits.GIEL = 1;
   630   0008A4  8CF2               	bsf	242,6,c	;volatile
   631                           
   632                           ;setting_hardaware/interrupt_manager.c: 10:     INTCONbits.INT0IF = 0;
   633   0008A6  92F2               	bcf	242,1,c	;volatile
   634                           
   635                           ;setting_hardaware/interrupt_manager.c: 11:     INTCONbits.INT0IE = 1;
   636   0008A8  88F2               	bsf	242,4,c	;volatile
   637   0008AA                     
   638                           ;setting_hardaware/interrupt_manager.c: 12:     TRISB = 0;
   639   0008AA  0E00               	movlw	0
   640   0008AC  6E93               	movwf	147,c	;volatile
   641   0008AE  0012               	return		;funcret
   642   0008B0                     __end_of_INTERRUPT_Initialize:
   643                           	callstack 0
   644                           
   645 ;; *************** function _GetString *****************
   646 ;; Defined at:
   647 ;;		line 75 in file "setting_hardaware/uart.c"
   648 ;; Parameters:    Size  Location     Type
   649 ;;		None
   650 ;; Auto vars:     Size  Location     Type
   651 ;;		None
   652 ;; Return value:  Size  Location     Type
   653 ;;                  1    wreg      PTR unsigned char 
   654 ;; Registers used:
   655 ;;		wreg
   656 ;; Tracked objects:
   657 ;;		On entry : 0/0
   658 ;;		On exit  : 0/0
   659 ;;		Unchanged: 0/0
   660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   661 ;;      Params:         2       0       0       0       0       0       0
   662 ;;      Locals:         0       0       0       0       0       0       0
   663 ;;      Temps:          0       0       0       0       0       0       0
   664 ;;      Totals:         2       0       0       0       0       0       0
   665 ;;Total ram usage:        2 bytes
   666 ;; Hardware stack levels used: 1
   667 ;; Hardware stack levels required when called: 5
   668 ;; This function calls:
   669 ;;		Nothing
   670 ;; This function is called by:
   671 ;;		_main
   672 ;; This function uses a non-reentrant model
   673 ;;
   674                           
   675                           	psect	text7
   676   0008B8                     __ptext7:
   677                           	callstack 0
   678   0008B8                     _GetString:
   679                           	callstack 25
   680   0008B8                     
   681                           ;setting_hardaware/uart.c: 76:     return mystring;
   682   0008B8  0E03               	movlw	_mystring& (0+255)
   683   0008BA  0012               	return		;funcret
   684   0008BC                     __end_of_GetString:
   685                           	callstack 0
   686                           
   687 ;; *************** function _Lo_ISR *****************
   688 ;; Defined at:
   689 ;;		line 81 in file "setting_hardaware/uart.c"
   690 ;; Parameters:    Size  Location     Type
   691 ;;		None
   692 ;; Auto vars:     Size  Location     Type
   693 ;;		None
   694 ;; Return value:  Size  Location     Type
   695 ;;                  1    wreg      void 
   696 ;; Registers used:
   697 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   698 ;; Tracked objects:
   699 ;;		On entry : 0/0
   700 ;;		On exit  : 0/0
   701 ;;		Unchanged: 0/0
   702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   703 ;;      Params:         0       0       0       0       0       0       0
   704 ;;      Locals:         0       0       0       0       0       0       0
   705 ;;      Temps:          5       0       0       0       0       0       0
   706 ;;      Totals:         5       0       0       0       0       0       0
   707 ;;Total ram usage:        5 bytes
   708 ;; Hardware stack levels used: 1
   709 ;; Hardware stack levels required when called: 4
   710 ;; This function calls:
   711 ;;		_MyusartRead
   712 ;; This function is called by:
   713 ;;		Interrupt level 1
   714 ;; This function uses a non-reentrant model
   715 ;;
   716                           
   717                           	psect	intcodelo
   718   000018                     __pintcodelo:
   719                           	callstack 0
   720   000018                     _Lo_ISR:
   721                           	callstack 24
   722                           
   723                           ;incstack = 0
   724   000018  803C               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   725   00001A  CFD8 F032          	movff	status,??_Lo_ISR
   726   00001E  CFE8 F033          	movff	wreg,??_Lo_ISR+1
   727   000022  CFE0 F034          	movff	bsr,??_Lo_ISR+2
   728   000026  CFD9 F035          	movff	fsr2l,??_Lo_ISR+3
   729   00002A  CFDA F036          	movff	fsr2h,??_Lo_ISR+4
   730   00002E                     
   731                           ;setting_hardaware/uart.c: 83:     if(RCIF)
   732   00002E  AA9E               	btfss	3998,5,c	;volatile
   733   000030  EF1C  F000         	goto	i1u41_21
   734   000034  EF1E  F000         	goto	i1u41_20
   735   000038                     i1u41_21:
   736   000038  EF2A  F000         	goto	i1l171
   737   00003C                     i1u41_20:
   738   00003C                     
   739                           ;setting_hardaware/uart.c: 84:     {;setting_hardaware/uart.c: 85:         if(RCSTAbits.
      +                          OERR)
   740   00003C  A2AB               	btfss	171,1,c	;volatile
   741   00003E  EF23  F000         	goto	i1u42_21
   742   000042  EF25  F000         	goto	i1u42_20
   743   000046                     i1u42_21:
   744   000046  EF28  F000         	goto	i1l1163
   745   00004A                     i1u42_20:
   746   00004A                     
   747                           ;setting_hardaware/uart.c: 86:         {;setting_hardaware/uart.c: 87:             CREN 
      +                          = 0;
   748   00004A  98AB               	bcf	4011,4,c	;volatile
   749                           
   750                           ;setting_hardaware/uart.c: 88:             __nop();
   751   00004C  0000               	nop	
   752                           
   753                           ;setting_hardaware/uart.c: 89:             CREN = 1;
   754   00004E  88AB               	bsf	4011,4,c	;volatile
   755   000050                     i1l1163:
   756                           
   757                           ;setting_hardaware/uart.c: 92:         MyusartRead();
   758   000050  EC88  F003         	call	_MyusartRead	;wreg free
   759   000054                     i1l171:
   760   000054  C036  FFDA         	movff	??_Lo_ISR+4,fsr2h
   761   000058  C035  FFD9         	movff	??_Lo_ISR+3,fsr2l
   762   00005C  C034  FFE0         	movff	??_Lo_ISR+2,bsr
   763   000060  C033  FFE8         	movff	??_Lo_ISR+1,wreg
   764   000064  C032  FFD8         	movff	??_Lo_ISR,status
   765   000068  903C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   766   00006A  0010               	retfie	
   767   00006C                     __end_of_Lo_ISR:
   768                           	callstack 0
   769                           
   770 ;; *************** function _MyusartRead *****************
   771 ;; Defined at:
   772 ;;		line 65 in file "setting_hardaware/uart.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;		None
   775 ;; Auto vars:     Size  Location     Type
   776 ;;		None
   777 ;; Return value:  Size  Location     Type
   778 ;;                  1    wreg      void 
   779 ;; Registers used:
   780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   781 ;; Tracked objects:
   782 ;;		On entry : 0/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   786 ;;      Params:         0       0       0       0       0       0       0
   787 ;;      Locals:         0       0       0       0       0       0       0
   788 ;;      Temps:          0       0       0       0       0       0       0
   789 ;;      Totals:         0       0       0       0       0       0       0
   790 ;;Total ram usage:        0 bytes
   791 ;; Hardware stack levels used: 1
   792 ;; Hardware stack levels required when called: 3
   793 ;; This function calls:
   794 ;;		___awmod
   795 ;;		i1_UART_Write
   796 ;; This function is called by:
   797 ;;		_Lo_ISR
   798 ;; This function uses a non-reentrant model
   799 ;;
   800                           
   801                           	psect	text9
   802   000710                     __ptext9:
   803                           	callstack 0
   804   000710                     _MyusartRead:
   805                           	callstack 24
   806   000710                     
   807                           ;setting_hardaware/uart.c: 68:     mystring[lenStr] = RCREG;
   808   000710  5001               	movf	_lenStr^0,w,c
   809   000712  0F03               	addlw	low _mystring
   810   000714  6ED9               	movwf	fsr2l,c
   811   000716  6ADA               	clrf	fsr2h,c
   812   000718  CFAE FFDF          	movff	4014,indf2	;volatile
   813   00071C                     
   814                           ;setting_hardaware/uart.c: 69:     UART_Write(mystring[lenStr]);
   815   00071C  5001               	movf	_lenStr^0,w,c
   816   00071E  0F03               	addlw	low _mystring
   817   000720  6ED9               	movwf	fsr2l,c
   818   000722  6ADA               	clrf	fsr2h,c
   819   000724  50DF               	movf	indf2,w,c
   820   000726  ECC3  F003         	call	i1_UART_Write
   821   00072A                     
   822                           ;setting_hardaware/uart.c: 70:     lenStr++;
   823   00072A  4A01               	infsnz	_lenStr^0,f,c
   824   00072C  2A02               	incf	(_lenStr+1)^0,f,c
   825   00072E                     
   826                           ;setting_hardaware/uart.c: 71:     lenStr %= 10;
   827   00072E  C001  F02C         	movff	_lenStr,___awmod@dividend
   828   000732  C002  F02D         	movff	_lenStr+1,___awmod@dividend+1
   829   000736  0E00               	movlw	0
   830   000738  6E2F               	movwf	(___awmod@divisor+1)^0,c
   831   00073A  0E0A               	movlw	10
   832   00073C  6E2E               	movwf	___awmod@divisor^0,c
   833   00073E  EC01  F003         	call	___awmod	;wreg free
   834   000742  C02C  F001         	movff	?___awmod,_lenStr
   835   000746  C02D  F002         	movff	?___awmod+1,_lenStr+1
   836   00074A  0012               	return		;funcret
   837   00074C                     __end_of_MyusartRead:
   838                           	callstack 0
   839                           
   840 ;; *************** function i1_UART_Write *****************
   841 ;; Defined at:
   842 ;;		line 41 in file "setting_hardaware/uart.c"
   843 ;; Parameters:    Size  Location     Type
   844 ;;  data            1    wreg     unsigned char 
   845 ;; Auto vars:     Size  Location     Type
   846 ;;  data            1    1[COMRAM] unsigned char 
   847 ;; Return value:  Size  Location     Type
   848 ;;                  1    wreg      void 
   849 ;; Registers used:
   850 ;;		wreg, status,2, status,0
   851 ;; Tracked objects:
   852 ;;		On entry : 0/0
   853 ;;		On exit  : 0/0
   854 ;;		Unchanged: 0/0
   855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   856 ;;      Params:         0       0       0       0       0       0       0
   857 ;;      Locals:         1       0       0       0       0       0       0
   858 ;;      Temps:          0       0       0       0       0       0       0
   859 ;;      Totals:         1       0       0       0       0       0       0
   860 ;;Total ram usage:        1 bytes
   861 ;; Hardware stack levels used: 1
   862 ;; Hardware stack levels required when called: 2
   863 ;; This function calls:
   864 ;;		Nothing
   865 ;; This function is called by:
   866 ;;		_MyusartRead
   867 ;; This function uses a non-reentrant model
   868 ;;
   869                           
   870                           	psect	text10
   871   000786                     __ptext10:
   872                           	callstack 0
   873   000786                     i1_UART_Write:
   874                           	callstack 24
   875                           
   876                           ;incstack = 0
   877                           ;i1UART_Write@data stored from wreg
   878   000786  6E2C               	movwf	i1UART_Write@data^0,c
   879   000788                     i1l140:
   880   000788  A2AC               	btfss	172,1,c	;volatile
   881   00078A  EFC9  F003         	goto	i1u31_21
   882   00078E  EFCB  F003         	goto	i1u31_20
   883   000792                     i1u31_21:
   884   000792  EFC4  F003         	goto	i1l140
   885   000796                     i1u31_20:
   886   000796                     
   887                           ;setting_hardaware/uart.c: 44:     TXREG = data;
   888   000796  C02C  FFAD         	movff	i1UART_Write@data,4013	;volatile
   889   00079A                     
   890                           ;setting_hardaware/uart.c: 45:     if(data == '\r'){
   891   00079A  0E0D               	movlw	13
   892   00079C  182C               	xorwf	i1UART_Write@data^0,w,c
   893   00079E  A4D8               	btfss	status,2,c
   894   0007A0  EFD4  F003         	goto	i1u32_21
   895   0007A4  EFD6  F003         	goto	i1u32_20
   896   0007A8                     i1u32_21:
   897   0007A8  EFDF  F003         	goto	i1l147
   898   0007AC                     i1u32_20:
   899   0007AC                     i1l144:
   900   0007AC  A2AC               	btfss	172,1,c	;volatile
   901   0007AE  EFDB  F003         	goto	i1u33_21
   902   0007B2  EFDD  F003         	goto	i1u33_20
   903   0007B6                     i1u33_21:
   904   0007B6  EFD6  F003         	goto	i1l144
   905   0007BA                     i1u33_20:
   906   0007BA                     
   907                           ;setting_hardaware/uart.c: 47:         TXREG = '\n';
   908   0007BA  0E0A               	movlw	10
   909   0007BC  6EAD               	movwf	173,c	;volatile
   910   0007BE                     i1l147:
   911   0007BE  0012               	return		;funcret
   912   0007C0                     __end_ofi1_UART_Write:
   913                           	callstack 0
   914                           
   915 ;; *************** function ___awmod *****************
   916 ;; Defined at:
   917 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
   918 ;; Parameters:    Size  Location     Type
   919 ;;  dividend        2    1[COMRAM] int 
   920 ;;  divisor         2    3[COMRAM] int 
   921 ;; Auto vars:     Size  Location     Type
   922 ;;  sign            1    6[COMRAM] unsigned char 
   923 ;;  counter         1    5[COMRAM] unsigned char 
   924 ;; Return value:  Size  Location     Type
   925 ;;                  2    1[COMRAM] int 
   926 ;; Registers used:
   927 ;;		wreg, status,2, status,0
   928 ;; Tracked objects:
   929 ;;		On entry : 0/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   933 ;;      Params:         4       0       0       0       0       0       0
   934 ;;      Locals:         2       0       0       0       0       0       0
   935 ;;      Temps:          0       0       0       0       0       0       0
   936 ;;      Totals:         6       0       0       0       0       0       0
   937 ;;Total ram usage:        6 bytes
   938 ;; Hardware stack levels used: 1
   939 ;; Hardware stack levels required when called: 2
   940 ;; This function calls:
   941 ;;		Nothing
   942 ;; This function is called by:
   943 ;;		_MyusartRead
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947                           	psect	text11
   948   000602                     __ptext11:
   949                           	callstack 0
   950   000602                     ___awmod:
   951                           	callstack 24
   952   000602  0E00               	movlw	0
   953   000604  6E31               	movwf	___awmod@sign^0,c
   954   000606  BE2D               	btfsc	(___awmod@dividend+1)^0,7,c
   955   000608  EF0A  F003         	goto	i1u25_20
   956   00060C  EF08  F003         	goto	i1u25_21
   957   000610                     i1u25_21:
   958   000610  EF10  F003         	goto	i1l1065
   959   000614                     i1u25_20:
   960   000614  6C2C               	negf	___awmod@dividend^0,c
   961   000616  1E2D               	comf	(___awmod@dividend+1)^0,f,c
   962   000618  B0D8               	btfsc	status,0,c
   963   00061A  2A2D               	incf	(___awmod@dividend+1)^0,f,c
   964   00061C  0E01               	movlw	1
   965   00061E  6E31               	movwf	___awmod@sign^0,c
   966   000620                     i1l1065:
   967   000620  BE2F               	btfsc	(___awmod@divisor+1)^0,7,c
   968   000622  EF17  F003         	goto	i1u26_20
   969   000626  EF15  F003         	goto	i1u26_21
   970   00062A                     i1u26_21:
   971   00062A  EF1B  F003         	goto	i1l1069
   972   00062E                     i1u26_20:
   973   00062E  6C2E               	negf	___awmod@divisor^0,c
   974   000630  1E2F               	comf	(___awmod@divisor+1)^0,f,c
   975   000632  B0D8               	btfsc	status,0,c
   976   000634  2A2F               	incf	(___awmod@divisor+1)^0,f,c
   977   000636                     i1l1069:
   978   000636  502E               	movf	___awmod@divisor^0,w,c
   979   000638  102F               	iorwf	(___awmod@divisor+1)^0,w,c
   980   00063A  B4D8               	btfsc	status,2,c
   981   00063C  EF22  F003         	goto	i1u27_21
   982   000640  EF24  F003         	goto	i1u27_20
   983   000644                     i1u27_21:
   984   000644  EF48  F003         	goto	i1l1085
   985   000648                     i1u27_20:
   986   000648  0E01               	movlw	1
   987   00064A  6E30               	movwf	___awmod@counter^0,c
   988   00064C  EF2C  F003         	goto	i1l1075
   989   000650                     i1l1073:
   990   000650  90D8               	bcf	status,0,c
   991   000652  362E               	rlcf	___awmod@divisor^0,f,c
   992   000654  362F               	rlcf	(___awmod@divisor+1)^0,f,c
   993   000656  2A30               	incf	___awmod@counter^0,f,c
   994   000658                     i1l1075:
   995   000658  AE2F               	btfss	(___awmod@divisor+1)^0,7,c
   996   00065A  EF31  F003         	goto	i1u28_21
   997   00065E  EF33  F003         	goto	i1u28_20
   998   000662                     i1u28_21:
   999   000662  EF28  F003         	goto	i1l1073
  1000   000666                     i1u28_20:
  1001   000666                     i1l1077:
  1002   000666  502E               	movf	___awmod@divisor^0,w,c
  1003   000668  5C2C               	subwf	___awmod@dividend^0,w,c
  1004   00066A  502F               	movf	(___awmod@divisor+1)^0,w,c
  1005   00066C  582D               	subwfb	(___awmod@dividend+1)^0,w,c
  1006   00066E  A0D8               	btfss	status,0,c
  1007   000670  EF3C  F003         	goto	i1u29_21
  1008   000674  EF3E  F003         	goto	i1u29_20
  1009   000678                     i1u29_21:
  1010   000678  EF42  F003         	goto	i1l1081
  1011   00067C                     i1u29_20:
  1012   00067C  502E               	movf	___awmod@divisor^0,w,c
  1013   00067E  5E2C               	subwf	___awmod@dividend^0,f,c
  1014   000680  502F               	movf	(___awmod@divisor+1)^0,w,c
  1015   000682  5A2D               	subwfb	(___awmod@dividend+1)^0,f,c
  1016   000684                     i1l1081:
  1017   000684  90D8               	bcf	status,0,c
  1018   000686  322F               	rrcf	(___awmod@divisor+1)^0,f,c
  1019   000688  322E               	rrcf	___awmod@divisor^0,f,c
  1020   00068A  2E30               	decfsz	___awmod@counter^0,f,c
  1021   00068C  EF33  F003         	goto	i1l1077
  1022   000690                     i1l1085:
  1023   000690  5031               	movf	___awmod@sign^0,w,c
  1024   000692  B4D8               	btfsc	status,2,c
  1025   000694  EF4E  F003         	goto	i1u30_21
  1026   000698  EF50  F003         	goto	i1u30_20
  1027   00069C                     i1u30_21:
  1028   00069C  EF54  F003         	goto	i1l1089
  1029   0006A0                     i1u30_20:
  1030   0006A0  6C2C               	negf	___awmod@dividend^0,c
  1031   0006A2  1E2D               	comf	(___awmod@dividend+1)^0,f,c
  1032   0006A4  B0D8               	btfsc	status,0,c
  1033   0006A6  2A2D               	incf	(___awmod@dividend+1)^0,f,c
  1034   0006A8                     i1l1089:
  1035   0006A8  C02C  F02C         	movff	___awmod@dividend,?___awmod
  1036   0006AC  C02D  F02D         	movff	___awmod@dividend+1,?___awmod+1
  1037   0006B0  0012               	return		;funcret
  1038   0006B2                     __end_of___awmod:
  1039                           	callstack 0
  1040                           
  1041 ;; *************** function _Hi_ISR *****************
  1042 ;; Defined at:
  1043 ;;		line 34 in file "main.c"
  1044 ;; Parameters:    Size  Location     Type
  1045 ;;		None
  1046 ;; Auto vars:     Size  Location     Type
  1047 ;;		None
  1048 ;; Return value:  Size  Location     Type
  1049 ;;                  1    wreg      void 
  1050 ;; Registers used:
  1051 ;;		wreg, status,2, status,0, cstack
  1052 ;; Tracked objects:
  1053 ;;		On entry : 0/0
  1054 ;;		On exit  : 0/0
  1055 ;;		Unchanged: 0/0
  1056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1057 ;;      Params:         0       0       0       0       0       0       0
  1058 ;;      Locals:         0       0       0       0       0       0       0
  1059 ;;      Temps:          0       0       0       0       0       0       0
  1060 ;;      Totals:         0       0       0       0       0       0       0
  1061 ;;Total ram usage:        0 bytes
  1062 ;; Hardware stack levels used: 1
  1063 ;; Hardware stack levels required when called: 1
  1064 ;; This function calls:
  1065 ;;		i2_UART_Write
  1066 ;; This function is called by:
  1067 ;;		Interrupt level 2
  1068 ;; This function uses a non-reentrant model
  1069 ;;
  1070                           
  1071                           	psect	intcode
  1072   000008                     __pintcode:
  1073                           	callstack 0
  1074   000008                     _Hi_ISR:
  1075                           	callstack 24
  1076                           
  1077                           ;incstack = 0
  1078   000008  823C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1079   00000A  ED59  F003         	call	int_func,f	;refresh shadow registers
  1080                           
  1081                           	psect	intcode_body
  1082   0006B2                     __pintcode_body:
  1083                           	callstack 24
  1084   0006B2                     int_func:
  1085                           	callstack 24
  1086   0006B2  0006               	pop		; remove dummy address from shadow register refresh
  1087   0006B4                     
  1088                           ;main.c: 37:     if(INTCONbits.INT0IF){
  1089   0006B4  A2F2               	btfss	242,1,c	;volatile
  1090   0006B6  EF5F  F003         	goto	i2u38_41
  1091   0006BA  EF61  F003         	goto	i2u38_40
  1092   0006BE                     i2u38_41:
  1093   0006BE  EF85  F003         	goto	i2l1153
  1094   0006C2                     i2u38_40:
  1095   0006C2                     
  1096                           ;main.c: 38:         LATC ++;
  1097   0006C2  2A8B               	incf	139,f,c	;volatile
  1098   0006C4                     
  1099                           ;main.c: 39:         if(LATC == 16) LATC = 0;
  1100   0006C4  0E10               	movlw	16
  1101   0006C6  188B               	xorwf	139,w,c	;volatile
  1102   0006C8  A4D8               	btfss	status,2,c
  1103   0006CA  EF69  F003         	goto	i2u39_41
  1104   0006CE  EF6B  F003         	goto	i2u39_40
  1105   0006D2                     i2u39_41:
  1106   0006D2  EF6D  F003         	goto	i2l1147
  1107   0006D6                     i2u39_40:
  1108   0006D6  0E00               	movlw	0
  1109   0006D8  6E8B               	movwf	139,c	;volatile
  1110   0006DA                     i2l1147:
  1111                           
  1112                           ;main.c: 40:         if(LATC < 10){
  1113   0006DA  0E0A               	movlw	10
  1114   0006DC  608B               	cpfslt	139,c	;volatile
  1115   0006DE  EF73  F003         	goto	i2u40_41
  1116   0006E2  EF75  F003         	goto	i2u40_40
  1117   0006E6                     i2u40_41:
  1118   0006E6  EF7B  F003         	goto	i2l1151
  1119   0006EA                     i2u40_40:
  1120   0006EA                     
  1121                           ;main.c: 41:             UART_Write(LATC +48);
  1122   0006EA  508B               	movf	139,w,c	;volatile
  1123   0006EC  0F30               	addlw	48
  1124   0006EE  ECE0  F003         	call	i2_UART_Write
  1125                           
  1126                           ;main.c: 42:         }
  1127   0006F2  EF82  F003         	goto	i2l36
  1128   0006F6                     i2l1151:
  1129                           
  1130                           ;main.c: 44:             UART_Write('1');
  1131   0006F6  0E31               	movlw	49
  1132   0006F8  ECE0  F003         	call	i2_UART_Write
  1133                           
  1134                           ;main.c: 45:             UART_Write((LATC-10) +48);
  1135   0006FC  508B               	movf	139,w,c	;volatile
  1136   0006FE  0F26               	addlw	38
  1137   000700  ECE0  F003         	call	i2_UART_Write
  1138   000704                     i2l36:
  1139                           
  1140                           ;main.c: 47:         UART_Write(' ');
  1141   000704  0E20               	movlw	32
  1142   000706  ECE0  F003         	call	i2_UART_Write
  1143   00070A                     i2l1153:
  1144                           
  1145                           ;main.c: 49:     INTCONbits.INT0IF = 0;
  1146   00070A  92F2               	bcf	242,1,c	;volatile
  1147   00070C  923C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1148   00070E  0011               	retfie		f
  1149   000710                     __end_of_Hi_ISR:
  1150                           	callstack 0
  1151                           
  1152 ;; *************** function i2_UART_Write *****************
  1153 ;; Defined at:
  1154 ;;		line 41 in file "setting_hardaware/uart.c"
  1155 ;; Parameters:    Size  Location     Type
  1156 ;;  data            1    wreg     unsigned char 
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;  data            1    0[COMRAM] unsigned char 
  1159 ;; Return value:  Size  Location     Type
  1160 ;;                  1    wreg      void 
  1161 ;; Registers used:
  1162 ;;		wreg, status,2, status,0
  1163 ;; Tracked objects:
  1164 ;;		On entry : 0/0
  1165 ;;		On exit  : 0/0
  1166 ;;		Unchanged: 0/0
  1167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1168 ;;      Params:         0       0       0       0       0       0       0
  1169 ;;      Locals:         1       0       0       0       0       0       0
  1170 ;;      Temps:          0       0       0       0       0       0       0
  1171 ;;      Totals:         1       0       0       0       0       0       0
  1172 ;;Total ram usage:        1 bytes
  1173 ;; Hardware stack levels used: 1
  1174 ;; This function calls:
  1175 ;;		Nothing
  1176 ;; This function is called by:
  1177 ;;		_Hi_ISR
  1178 ;; This function uses a non-reentrant model
  1179 ;;
  1180                           
  1181                           	psect	text13
  1182   0007C0                     __ptext13:
  1183                           	callstack 0
  1184   0007C0                     i2_UART_Write:
  1185                           	callstack 24
  1186                           
  1187                           ;incstack = 0
  1188                           ;i2UART_Write@data stored from wreg
  1189   0007C0  6E2B               	movwf	i2UART_Write@data^0,c
  1190   0007C2                     i2l140:
  1191   0007C2  A2AC               	btfss	172,1,c	;volatile
  1192   0007C4  EFE6  F003         	goto	i2u35_41
  1193   0007C8  EFE8  F003         	goto	i2u35_40
  1194   0007CC                     i2u35_41:
  1195   0007CC  EFE1  F003         	goto	i2l140
  1196   0007D0                     i2u35_40:
  1197   0007D0                     
  1198                           ;setting_hardaware/uart.c: 44:     TXREG = data;
  1199   0007D0  C02B  FFAD         	movff	i2UART_Write@data,4013	;volatile
  1200   0007D4                     
  1201                           ;setting_hardaware/uart.c: 45:     if(data == '\r'){
  1202   0007D4  0E0D               	movlw	13
  1203   0007D6  182B               	xorwf	i2UART_Write@data^0,w,c
  1204   0007D8  A4D8               	btfss	status,2,c
  1205   0007DA  EFF1  F003         	goto	i2u36_41
  1206   0007DE  EFF3  F003         	goto	i2u36_40
  1207   0007E2                     i2u36_41:
  1208   0007E2  EFFC  F003         	goto	i2l147
  1209   0007E6                     i2u36_40:
  1210   0007E6                     i2l144:
  1211   0007E6  A2AC               	btfss	172,1,c	;volatile
  1212   0007E8  EFF8  F003         	goto	i2u37_41
  1213   0007EC  EFFA  F003         	goto	i2u37_40
  1214   0007F0                     i2u37_41:
  1215   0007F0  EFF3  F003         	goto	i2l144
  1216   0007F4                     i2u37_40:
  1217   0007F4                     
  1218                           ;setting_hardaware/uart.c: 47:         TXREG = '\n';
  1219   0007F4  0E0A               	movlw	10
  1220   0007F6  6EAD               	movwf	173,c	;volatile
  1221   0007F8                     i2l147:
  1222   0007F8  0012               	return		;funcret
  1223   0007FA                     __end_ofi2_UART_Write:
  1224                           	callstack 0
  1225                           
  1226                           	psect	smallconst
  1227   000600                     __psmallconst:
  1228                           	callstack 0
  1229   000600  00                 	db	0
  1230   000601  00                 	db	0	; dummy byte at the end
  1231   000000                     
  1232                           	psect	rparam
  1233   000000                     
  1234                           	psect	temp
  1235   00003C                     btemp:
  1236                           	callstack 0
  1237   00003C                     	ds	1
  1238   000000                     int$flags	set	btemp
  1239   000000                     wtemp8	set	btemp+1
  1240   000000                     ttemp5	set	btemp+1
  1241   000000                     ttemp6	set	btemp+4
  1242   000000                     ttemp7	set	btemp+8
  1243                           
  1244                           	psect	idloc
  1245                           
  1246                           ;Config register IDLOC0 @ 0x200000
  1247                           ;	unspecified, using default values
  1248   200000                     	org	2097152
  1249   200000  FF                 	db	255
  1250                           
  1251                           ;Config register IDLOC1 @ 0x200001
  1252                           ;	unspecified, using default values
  1253   200001                     	org	2097153
  1254   200001  FF                 	db	255
  1255                           
  1256                           ;Config register IDLOC2 @ 0x200002
  1257                           ;	unspecified, using default values
  1258   200002                     	org	2097154
  1259   200002  FF                 	db	255
  1260                           
  1261                           ;Config register IDLOC3 @ 0x200003
  1262                           ;	unspecified, using default values
  1263   200003                     	org	2097155
  1264   200003  FF                 	db	255
  1265                           
  1266                           ;Config register IDLOC4 @ 0x200004
  1267                           ;	unspecified, using default values
  1268   200004                     	org	2097156
  1269   200004  FF                 	db	255
  1270                           
  1271                           ;Config register IDLOC5 @ 0x200005
  1272                           ;	unspecified, using default values
  1273   200005                     	org	2097157
  1274   200005  FF                 	db	255
  1275                           
  1276                           ;Config register IDLOC6 @ 0x200006
  1277                           ;	unspecified, using default values
  1278   200006                     	org	2097158
  1279   200006  FF                 	db	255
  1280                           
  1281                           ;Config register IDLOC7 @ 0x200007
  1282                           ;	unspecified, using default values
  1283   200007                     	org	2097159
  1284   200007  FF                 	db	255
  1285                           
  1286                           	psect	config
  1287                           
  1288                           ; Padding undefined space
  1289   300000                     	org	3145728
  1290   300000  FF                 	db	255
  1291                           
  1292                           ;Config register CONFIG1H @ 0x300001
  1293                           ;	Oscillator Selection bits
  1294                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  1295                           ;	Fail-Safe Clock Monitor Enable bit
  1296                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1297                           ;	Internal/External Oscillator Switchover bit
  1298                           ;	IESO = ON, Oscillator Switchover mode enabled
  1299   300001                     	org	3145729
  1300   300001  88                 	db	136
  1301                           
  1302                           ;Config register CONFIG2L @ 0x300002
  1303                           ;	Power-up Timer Enable bit
  1304                           ;	PWRT = OFF, PWRT disabled
  1305                           ;	Brown-out Reset Enable bits
  1306                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1307                           ;	Brown Out Reset Voltage bits
  1308                           ;	BORV = 3, Minimum setting
  1309   300002                     	org	3145730
  1310   300002  1F                 	db	31
  1311                           
  1312                           ;Config register CONFIG2H @ 0x300003
  1313                           ;	Watchdog Timer Enable bit
  1314                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1315                           ;	Watchdog Timer Postscale Select bits
  1316                           ;	WDTPS = 1, 1:1
  1317   300003                     	org	3145731
  1318   300003  00                 	db	0
  1319                           
  1320                           ; Padding undefined space
  1321   300004                     	org	3145732
  1322   300004  FF                 	db	255
  1323                           
  1324                           ;Config register CONFIG3H @ 0x300005
  1325                           ;	CCP2 MUX bit
  1326                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1327                           ;	PORTB A/D Enable bit
  1328                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  1329                           ;	Low-Power Timer1 Oscillator Enable bit
  1330                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1331                           ;	MCLR Pin Enable bit
  1332                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1333   300005                     	org	3145733
  1334   300005  83                 	db	131
  1335                           
  1336                           ;Config register CONFIG4L @ 0x300006
  1337                           ;	Stack Full/Underflow Reset Enable bit
  1338                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1339                           ;	Single-Supply ICSP Enable bit
  1340                           ;	LVP = OFF, Single-Supply ICSP disabled
  1341                           ;	Extended Instruction Set Enable bit
  1342                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1343                           ;	Background Debugger Enable bit
  1344                           ;	DEBUG = 0x1, unprogrammed default
  1345   300006                     	org	3145734
  1346   300006  81                 	db	129
  1347                           
  1348                           ; Padding undefined space
  1349   300007                     	org	3145735
  1350   300007  FF                 	db	255
  1351                           
  1352                           ;Config register CONFIG5L @ 0x300008
  1353                           ;	Code Protection bit
  1354                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  1355                           ;	Code Protection bit
  1356                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  1357                           ;	Code Protection bit
  1358                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  1359                           ;	Code Protection bit
  1360                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  1361   300008                     	org	3145736
  1362   300008  0F                 	db	15
  1363                           
  1364                           ;Config register CONFIG5H @ 0x300009
  1365                           ;	Boot Block Code Protection bit
  1366                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1367                           ;	Data EEPROM Code Protection bit
  1368                           ;	CPD = OFF, Data EEPROM not code-protected
  1369   300009                     	org	3145737
  1370   300009  C0                 	db	192
  1371                           
  1372                           ;Config register CONFIG6L @ 0x30000A
  1373                           ;	Write Protection bit
  1374                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  1375                           ;	Write Protection bit
  1376                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  1377                           ;	Write Protection bit
  1378                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  1379                           ;	Write Protection bit
  1380                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  1381   30000A                     	org	3145738
  1382   30000A  0F                 	db	15
  1383                           
  1384                           ;Config register CONFIG6H @ 0x30000B
  1385                           ;	Configuration Register Write Protection bit
  1386                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1387                           ;	Boot Block Write Protection bit
  1388                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  1389                           ;	Data EEPROM Write Protection bit
  1390                           ;	WRTD = OFF, Data EEPROM not write-protected
  1391   30000B                     	org	3145739
  1392   30000B  E0                 	db	224
  1393                           
  1394                           ;Config register CONFIG7L @ 0x30000C
  1395                           ;	Table Read Protection bit
  1396                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  1397                           ;	Table Read Protection bit
  1398                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  1399                           ;	Table Read Protection bit
  1400                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  1401                           ;	Table Read Protection bit
  1402                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1403   30000C                     	org	3145740
  1404   30000C  0F                 	db	15
  1405                           
  1406                           ;Config register CONFIG7H @ 0x30000D
  1407                           ;	Boot Block Table Read Protection bit
  1408                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1409   30000D                     	org	3145741
  1410   30000D  40                 	db	64
  1411                           tosu	equ	0xFFF
  1412                           tosh	equ	0xFFE
  1413                           tosl	equ	0xFFD
  1414                           stkptr	equ	0xFFC
  1415                           pclatu	equ	0xFFB
  1416                           pclath	equ	0xFFA
  1417                           pcl	equ	0xFF9
  1418                           tblptru	equ	0xFF8
  1419                           tblptrh	equ	0xFF7
  1420                           tblptrl	equ	0xFF6
  1421                           tablat	equ	0xFF5
  1422                           prodh	equ	0xFF4
  1423                           prodl	equ	0xFF3
  1424                           indf0	equ	0xFEF
  1425                           postinc0	equ	0xFEE
  1426                           postdec0	equ	0xFED
  1427                           preinc0	equ	0xFEC
  1428                           plusw0	equ	0xFEB
  1429                           fsr0h	equ	0xFEA
  1430                           fsr0l	equ	0xFE9
  1431                           wreg	equ	0xFE8
  1432                           indf1	equ	0xFE7
  1433                           postinc1	equ	0xFE6
  1434                           postdec1	equ	0xFE5
  1435                           preinc1	equ	0xFE4
  1436                           plusw1	equ	0xFE3
  1437                           fsr1h	equ	0xFE2
  1438                           fsr1l	equ	0xFE1
  1439                           bsr	equ	0xFE0
  1440                           indf2	equ	0xFDF
  1441                           postinc2	equ	0xFDE
  1442                           postdec2	equ	0xFDD
  1443                           preinc2	equ	0xFDC
  1444                           plusw2	equ	0xFDB
  1445                           fsr2h	equ	0xFDA
  1446                           fsr2l	equ	0xFD9
  1447                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         42
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     17      59
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    sp__GetString	PTR unsigned char  size(1) Largest target is 20
		 -> mystring(COMRAM[20]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 20
		 -> str(COMRAM[20]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 20
		 -> str(COMRAM[20]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 20
		 -> str(COMRAM[20]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 20
		 -> mystring(COMRAM[20]), 


Critical Paths under _main in COMRAM

    _main->_strcpy
    _strcpy->_GetString

Critical Paths under _Lo_ISR in COMRAM

    _MyusartRead->___awmod

Critical Paths under _Hi_ISR in COMRAM

    _Hi_ISR->i2_UART_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _Lo_ISR in BANK0

    None.

Critical Paths under _Hi_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _Hi_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _Hi_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _Hi_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _Hi_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Critical Paths under _Hi_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     255
                          _GetString
                  _SYSTEM_Initialize
                         _UART_Write
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               3     1      2     225
                                             14 COMRAM     3     1      2
                          _GetString (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           1     1      0      30
                                             12 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
                    _UART_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetString                                            2     0      2       0
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Lo_ISR                                               5     5      0     492
                                              7 COMRAM     5     5      0
                        _MyusartRead
 ---------------------------------------------------------------------------------
 (4) _MyusartRead                                          0     0      0     492
                            ___awmod
                       i1_UART_Write
 ---------------------------------------------------------------------------------
 (5) i1_UART_Write                                         1     1      0      44
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Hi_ISR                                               0     0      0      44
                       i2_UART_Write
 ---------------------------------------------------------------------------------
 (7) i2_UART_Write                                         1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GetString
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _UART_Initialize
   _UART_Write
   _strcpy
     _GetString (ARG)

 _Lo_ISR (ROOT)
   _MyusartRead
     ___awmod
     i1_UART_Write

 _Hi_ISR (ROOT)
   i2_UART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            F4      0       0      13        0.0%
BANK5               F4      0       0      14        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     11      3B       1       46.8%
BITBIGSFR_1llhl      B      0       0      25        0.0%
BITBIGSFR_1hhl       B      0       0      21        0.0%
BITBIGSFRl           B      0       0      28        0.0%
BITBIGSFR_5h         A      0       0      15        0.0%
BITBIGSFR_1llhh      8      0       0      24        0.0%
BITBIGSFRhhh         7      0       0      26        0.0%
BITBIGSFRhl          6      0       0      27        0.0%
BITBIGSFR_2          6      0       0      19        0.0%
BITBIGSFR_1llhh      4      0       0      23        0.0%
BITBIGSFR_4          3      0       0      17        0.0%
BITBIGSFR_3          3      0       0      18        0.0%
BITBIGSFR_1hhh       2      0       0      20        0.0%
BITBIGSFR_1lh        2      0       0      22        0.0%
BITBIGSFR_5l         2      0       0      16        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3B      29        0.0%
DATA                 0      0      3B      31        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Dec 21 03:41:36 2023

                           l80 08AE                             bsr 0FE0                            l101 0888  
                          l104 08B6                            l140 074E                            l144 0772  
                          l137 086A                            l147 0784                            l164 08BA  
                          l931 087C                            l851 0822                            l853 08A0  
                          l861 0854                            l941 0780                            l933 074E  
                          l855 08AA                            l871 0860                            l863 0858  
                          l927 086C                            l935 075C                            l857 08B0  
                          l873 0862                            l865 085A                            l929 0870  
                          l937 0760                            l875 0864                            l867 085C  
                          l859 084A                            l877 0866                            l869 085E  
                          l879 0868                            u100 075C                            u101 0758  
                          u110 0772                            u111 076E                            u120 0780  
                          u121 077C                            u340 0822                            u341 081E  
                          _str 0017                   ___awmod@sign 0031                            wreg 0FE8  
                         l1103 08B8                           l1107 07FA                           l1131 0824  
                         l1109 07FE                           l1133 0828                           l1135 082E  
                         l1137 0834                           _ADFM 7E07                           _CREN 7D5C  
                         _LATC 0F8B                           _RCIF 7CF5                           i2l36 0704  
                         i2l37 070C                           _main 0824                           fsr1h 0FE2  
                         fsr2h 0FDA                           indf1 0FE7                           indf2 0FDF  
                         fsr1l 0FE1                           fsr2l 0FD9                           btemp 003C  
                         start 006C                   ___param_bank 0000               ?_UART_Initialize 002B  
__end_of_OSCILLATOR_Initialize 08B8                          ?_main 002B                __end_of___awmod 06B2  
                        _IRCF0 7E9C                          _IRCF1 7E9D                          _IRCF2 7E9E  
                        i1l140 0788                          i1l144 07AC                          i1l161 074A  
                        i1l147 07BE                          i1l171 0054                          i1l418 06B0  
                        i2l140 07C2                          i2l144 07E6                          i2l147 07F8  
                        _RCREG 0FAE                          _SPBRG 0FAF                          _TRISA 0F92  
                        _TRISB 0F93                          _TXREG 0FAD                    ?_UART_Write 002B  
                        ttemp5 003D                          ttemp6 0040                          ttemp7 0044  
                        status 0FD8                          wtemp8 003D                __initialization 088A  
                 __end_of_main 084A                         ??_main 003C                  __activetblptr 0000  
                       _ADCON1 0FC1                         _ADRESH 0FC4                         _ADRESL 0FC3  
                       i1l1101 07BA                         i1l1111 0710                         i1l1113 071C  
                       i1l1115 072A                         i1l1061 0614                         i1l1117 072E  
                       i1l1071 0648                         i1l1063 061C                         i1l1081 0684  
                       i1l1073 0650                         i1l1065 0620                         i1l1057 0602  
                       i1l1161 004A                         i1l1083 068A                         i1l1075 0658  
                       i1l1067 062E                         i1l1059 0606                         i1l1163 0050  
                       i1l1077 0666                         i1l1085 0690                         i1l1069 0636  
                       i1l1093 0788                         i1l1157 002E                         i1l1087 06A0  
                       i1l1079 067C                         i1l1095 0796                         i1l1159 003C  
                       i1l1089 06A8                         i1l1097 079A                         i2l1121 07C2  
                       i2l1123 07D0                         i2l1125 07D4                         i2l1141 06C2  
                       i2l1151 06F6                         i2l1143 06C4                         i2l1129 07F4  
                       i2l1145 06D6                         i2l1153 070A                         i2l1147 06DA  
                       i2l1139 06B4                         i2l1149 06EA                         _Hi_ISR 0008  
                       _Lo_ISR 0018                      ??___awmod 0030                         _lenStr 0001  
                       clear_0 0890                ___awmod@divisor 002E                         isa$std 0001  
              ___awmod@counter 0030                         _strcpy 07FA                   __mediumconst 0000  
            _SYSTEM_Initialize 086C                     __accesstop 0080        __end_of__initialization 0896  
           ?_SYSTEM_Initialize 002B                  ___rparam_used 0001              __end_of_GetString 08BC  
                ?i1_UART_Write 002B                 __pcstackCOMRAM 002B            ??_SYSTEM_Initialize 0037  
                ??_MyusartRead 0032                  ?i2_UART_Write 002B      __end_of_SYSTEM_Initialize 088A  
                      ?_Hi_ISR 002B               i2UART_Write@data 002B                        ?_Lo_ISR 002B  
               ??i1_UART_Write 002C                        _CCP1CON 0FBD                        ?_strcpy 0039  
               ??i2_UART_Write 002B                   ??_UART_Write 0037                        i1u30_20 06A0  
                      i1u30_21 069C                        i1u31_20 0796                        i1u31_21 0792  
                      i1u32_20 07AC                        i1u32_21 07A8                        i1u25_20 0614  
                      i1u33_20 07BA                        i1u41_20 003C                        i1u25_21 0610  
                      i1u33_21 07B6                        i1u41_21 0038                        i1u26_20 062E  
                      i1u42_20 004A                        i1u26_21 062A                        i1u42_21 0046  
                      i1u27_20 0648                        i1u27_21 0644                        i1u28_20 0666  
                      i1u28_21 0662                        i1u29_20 067C                        i1u29_21 0678  
                      i2u40_40 06EA                        i2u40_41 06E6                        i2u35_40 07D0  
                      i2u35_41 07CC                        i2u36_40 07E6                        i2u36_41 07E2  
                      i2u37_40 07F4                        i2u37_41 07F0                        i2u38_40 06C2  
                      i2u38_41 06BE                        i2u39_40 06D6                        i2u39_41 06D2  
          __end_of_MyusartRead 074C                        __Hparam 0000                        __Lparam 0000  
                      ___awmod 0602             __end_of_UART_Write 0786                   __psmallconst 0600  
                      __pcinit 088A                        __ramtop 0600                        __ptext0 0824  
                      __ptext1 07FA                        __ptext2 074C                        __ptext3 086C  
                      __ptext4 084A                        __ptext5 08B0                        __ptext6 08A0  
                      __ptext7 08B8                        __ptext9 0710          _OSCILLATOR_Initialize 08B0  
             ___awmod@dividend 002C                 __pintcode_body 06B2           end_of_initialization 0896  
                      int_func 06B2                      _RCSTAbits 0FAB                        postinc0 0FEE  
                      strcpy@d 003B                 UART_Write@data 0037                      _TRISCbits 0F94  
                  _MyusartRead 0710           __end_ofi1_UART_Write 07C0                      _TXSTAbits 0FAC  
               __end_of_Hi_ISR 0710                 __end_of_Lo_ISR 006C           __end_ofi2_UART_Write 07FA  
 __end_of_INTERRUPT_Initialize 08B0                      _GetString 08B8                    _BAUDCONbits 0FB8  
       ?_OSCILLATOR_Initialize 002B                 __end_of_strcpy 0824            start_initialization 088A  
            ??_UART_Initialize 0037                       ??_Hi_ISR 002C                       ??_Lo_ISR 0032  
                   ?_GetString 0037                       ??_strcpy 003B                    __pbssCOMRAM 0001  
                    __pintcode 0008                       ?___awmod 002C                    __pintcodelo 0018  
                  __smallconst 0600           _INTERRUPT_Initialize 08A0                       _IPR1bits 0F9F  
                     _PIE1bits 0F9D                       _PIR1bits 0F9E                   i1_UART_Write 0786  
                     _RCONbits 0FD0                    ??_GetString 0039                     _ADCON0bits 0FC2  
                   _ADCON2bits 0FC0                   ?_MyusartRead 002B                   i2_UART_Write 07C0  
        ?_INTERRUPT_Initialize 002B               i1UART_Write@data 002C                       __Hrparam 0000  
                     __Lrparam 0000        ??_OSCILLATOR_Initialize 0037                _UART_Initialize 084A  
                     __ptext10 0786                       __ptext11 0602                       __ptext13 07C0  
                   strcpy@dest 0039                       isa$xinst 0000                       int$flags 003C  
                     _mystring 0003                     _INTCONbits 0FF2         ??_INTERRUPT_Initialize 0037  
                     intlevel1 0000                       intlevel2 0000                      strcpy@src 003A  
      __end_of_UART_Initialize 086C                     _UART_Write 074C  
