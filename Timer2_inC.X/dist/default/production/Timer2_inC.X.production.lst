

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Jan 04 19:05:55 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    12                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    18   000000                     
    19                           ; Generated 18/08/2023 GMT
    20                           ; 
    21                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F4520 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53   000000                     
    54                           	psect	nvCOMRAM
    55   000001                     __pnvCOMRAM:
    56                           	callstack 0
    57   000001                     _t:
    58                           	callstack 0
    59   000001                     	ds	2
    60   000000                     _ADCON1bits	set	4033
    61   000000                     _LATC	set	3979
    62   000000                     _TRISC	set	3988
    63   000000                     _PIR1bits	set	3998
    64   000000                     _ADCON2bits	set	4032
    65   000000                     _IPR1bits	set	3999
    66   000000                     _ADCON1	set	4033
    67   000000                     _ADCON0bits	set	4034
    68   000000                     _T2CON	set	4042
    69   000000                     _RCONbits	set	4048
    70   000000                     _PIE1bits	set	3997
    71   000000                     _TRISAbits	set	3986
    72   000000                     _OSCCONbits	set	4051
    73   000000                     _INTCONbits	set	4082
    74   000000                     _PR2	set	4043
    75                           
    76                           ; #config settings
    77                           
    78                           	psect	cinit
    79   0006C2                     __pcinit:
    80                           	callstack 0
    81   0006C2                     start_initialization:
    82                           	callstack 0
    83   0006C2                     __initialization:
    84                           	callstack 0
    85                           
    86                           ; Clear objects allocated to COMRAM (1 bytes)
    87   0006C2  6A05               	clrf	__pbssCOMRAM& (0+255),c
    88   0006C4                     end_of_initialization:
    89                           	callstack 0
    90   0006C4                     __end_of__initialization:
    91                           	callstack 0
    92   0006C4  9006               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    93   0006C6  9206               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    94   0006C8  0100               	movlb	0
    95   0006CA  EF01  F003         	goto	_main	;jump to C main() function
    96                           
    97                           	psect	bssCOMRAM
    98   000005                     __pbssCOMRAM:
    99                           	callstack 0
   100   000005                     _counter:
   101                           	callstack 0
   102   000005                     	ds	1
   103                           
   104                           	psect	cstackCOMRAM
   105   000003                     __pcstackCOMRAM:
   106                           	callstack 0
   107   000003                     ??_main:
   108                           
   109                           ; 1 bytes @ 0x0
   110   000003                     	ds	2
   111                           
   112 ;;
   113 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   114 ;;
   115 ;; *************** function _main *****************
   116 ;; Defined at:
   117 ;;		line 78 in file "Final_1a.c"
   118 ;; Parameters:    Size  Location     Type
   119 ;;		None
   120 ;; Auto vars:     Size  Location     Type
   121 ;;		None
   122 ;; Return value:  Size  Location     Type
   123 ;;                  1    wreg      void 
   124 ;; Registers used:
   125 ;;		wreg, status,2, status,0
   126 ;; Tracked objects:
   127 ;;		On entry : 0/0
   128 ;;		On exit  : 0/0
   129 ;;		Unchanged: 0/0
   130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   131 ;;      Params:         0       0       0       0       0       0       0
   132 ;;      Locals:         0       0       0       0       0       0       0
   133 ;;      Temps:          2       0       0       0       0       0       0
   134 ;;      Totals:         2       0       0       0       0       0       0
   135 ;;Total ram usage:        2 bytes
   136 ;; Hardware stack levels required when called: 1
   137 ;; This function calls:
   138 ;;		Nothing
   139 ;; This function is called by:
   140 ;;		Startup code after reset
   141 ;; This function uses a non-reentrant model
   142 ;;
   143                           
   144                           	psect	text0
   145   000602                     __ptext0:
   146                           	callstack 0
   147   000602                     _main:
   148                           	callstack 30
   149   000602                     
   150                           ;Final_1a.c: 80:     t = 1;
   151   000602  0E00               	movlw	0
   152   000604  6E02               	movwf	(_t+1)^0,c
   153   000606  0E01               	movlw	1
   154   000608  6E01               	movwf	_t^0,c
   155                           
   156                           ;Final_1a.c: 81:     counter = 0;
   157   00060A  0E00               	movlw	0
   158   00060C  6E05               	movwf	_counter^0,c
   159                           
   160                           ;Final_1a.c: 84:     ADCON1 = 0x0f;
   161   00060E  0E0F               	movlw	15
   162   000610  6EC1               	movwf	193,c	;volatile
   163                           
   164                           ;Final_1a.c: 85:     TRISC = 0;
   165   000612  0E00               	movlw	0
   166   000614  6E94               	movwf	148,c	;volatile
   167                           
   168                           ;Final_1a.c: 86:     LATC = 0xf;
   169   000616  0E0F               	movlw	15
   170   000618  6E8B               	movwf	139,c	;volatile
   171   00061A                     
   172                           ;Final_1a.c: 88:     RCONbits.IPEN = 1;
   173   00061A  8ED0               	bsf	208,7,c	;volatile
   174   00061C                     
   175                           ;Final_1a.c: 89:     INTCONbits.GIE = 1;
   176   00061C  8EF2               	bsf	242,7,c	;volatile
   177   00061E                     
   178                           ;Final_1a.c: 92:     PIR1bits.TMR2IF = 0;
   179   00061E  929E               	bcf	158,1,c	;volatile
   180   000620                     
   181                           ;Final_1a.c: 93:     IPR1bits.TMR2IP = 1;
   182   000620  829F               	bsf	159,1,c	;volatile
   183   000622                     
   184                           ;Final_1a.c: 94:     PIE1bits.TMR2IE = 1;
   185   000622  829D               	bsf	157,1,c	;volatile
   186   000624                     
   187                           ;Final_1a.c: 97:     T2CON = 0xff;
   188   000624  68CA               	setf	202,c	;volatile
   189                           
   190                           ;Final_1a.c: 98:     PR2 = 122;
   191   000626  0E7A               	movlw	122
   192   000628  6ECB               	movwf	203,c	;volatile
   193                           
   194                           ;Final_1a.c: 102:     OSCCONbits.IRCF = 0b110;
   195   00062A  50D3               	movf	211,w,c	;volatile
   196   00062C  0B8F               	andlw	-113
   197   00062E  0960               	iorlw	96
   198   000630  6ED3               	movwf	211,c	;volatile
   199   000632                     
   200                           ;Final_1a.c: 103:     TRISAbits.RA0 = 1;
   201   000632  8092               	bsf	146,0,c	;volatile
   202   000634                     
   203                           ;Final_1a.c: 106:     ADCON1bits.VCFG0 = 0;
   204   000634  98C1               	bcf	193,4,c	;volatile
   205   000636                     
   206                           ;Final_1a.c: 107:     ADCON1bits.VCFG1 = 0;
   207   000636  9AC1               	bcf	193,5,c	;volatile
   208                           
   209                           ;Final_1a.c: 108:     ADCON1bits.PCFG = 0b1110;
   210   000638  50C1               	movf	193,w,c	;volatile
   211   00063A  0BF0               	andlw	-16
   212   00063C  090E               	iorlw	14
   213   00063E  6EC1               	movwf	193,c	;volatile
   214                           
   215                           ;Final_1a.c: 109:     ADCON0bits.CHS = 0b0000;
   216   000640  0EC3               	movlw	-61
   217   000642  16C2               	andwf	194,f,c	;volatile
   218                           
   219                           ;Final_1a.c: 110:     ADCON2bits.ADCS = 0b100;
   220   000644  50C0               	movf	192,w,c	;volatile
   221   000646  0BF8               	andlw	-8
   222   000648  0904               	iorlw	4
   223   00064A  6EC0               	movwf	192,c	;volatile
   224                           
   225                           ;Final_1a.c: 111:     ADCON2bits.ACQT = 0b010;
   226   00064C  50C0               	movf	192,w,c	;volatile
   227   00064E  0BC7               	andlw	-57
   228   000650  0910               	iorlw	16
   229   000652  6EC0               	movwf	192,c	;volatile
   230   000654                     
   231                           ;Final_1a.c: 112:     ADCON0bits.ADON = 1;
   232   000654  80C2               	bsf	194,0,c	;volatile
   233   000656                     
   234                           ;Final_1a.c: 113:     ADCON2bits.ADFM = 1;
   235   000656  8EC0               	bsf	192,7,c	;volatile
   236   000658                     
   237                           ;Final_1a.c: 117:     PIE1bits.ADIE = 1;
   238   000658  8C9D               	bsf	157,6,c	;volatile
   239   00065A                     
   240                           ;Final_1a.c: 118:     PIR1bits.ADIF = 0;
   241   00065A  9C9E               	bcf	158,6,c	;volatile
   242   00065C                     
   243                           ;Final_1a.c: 119:     INTCONbits.PEIE = 1;
   244   00065C  8CF2               	bsf	242,6,c	;volatile
   245   00065E                     
   246                           ;Final_1a.c: 120:     INTCONbits.GIE = 1;
   247   00065E  8EF2               	bsf	242,7,c	;volatile
   248   000660                     
   249                           ;Final_1a.c: 124:     ADCON0bits.GO = 1;
   250   000660  82C2               	bsf	194,1,c	;volatile
   251   000662                     l769:
   252                           
   253                           ;Final_1a.c: 127:         if(counter == t){
   254   000662  5005               	movf	_counter^0,w,c
   255   000664  6E03               	movwf	??_main^0,c
   256   000666  6A04               	clrf	(??_main+1)^0,c
   257   000668  5001               	movf	_t^0,w,c
   258   00066A  1803               	xorwf	??_main^0,w,c
   259   00066C  E107               	bnz	u21
   260   00066E  5002               	movf	(_t+1)^0,w,c
   261   000670  1804               	xorwf	(??_main+1)^0,w,c
   262   000672  A4D8               	btfss	status,2,c
   263   000674  EF3E  F003         	goto	u21
   264   000678  EF40  F003         	goto	u20
   265   00067C                     u21:
   266   00067C  EF31  F003         	goto	l769
   267   000680                     u20:
   268   000680                     
   269                           ;Final_1a.c: 128:             if(LATC == 0xf) LATC = 0;
   270   000680  0E0F               	movlw	15
   271   000682  188B               	xorwf	139,w,c	;volatile
   272   000684  A4D8               	btfss	status,2,c
   273   000686  EF47  F003         	goto	u31
   274   00068A  EF49  F003         	goto	u30
   275   00068E                     u31:
   276   00068E  EF4D  F003         	goto	l775
   277   000692                     u30:
   278   000692  0E00               	movlw	0
   279   000694  6E8B               	movwf	139,c	;volatile
   280   000696  EF4F  F003         	goto	l48
   281   00069A                     l775:
   282   00069A  0E0F               	movlw	15
   283   00069C  6E8B               	movwf	139,c	;volatile
   284   00069E                     l48:
   285                           
   286                           ;Final_1a.c: 130:             counter = 0;
   287   00069E  0E00               	movlw	0
   288   0006A0  6E05               	movwf	_counter^0,c
   289   0006A2  EF31  F003         	goto	l769
   290   0006A6  EF07  F000         	goto	start
   291   0006AA                     __end_of_main:
   292                           	callstack 0
   293                           
   294 ;; *************** function _H_ISR *****************
   295 ;; Defined at:
   296 ;;		line 67 in file "Final_1a.c"
   297 ;; Parameters:    Size  Location     Type
   298 ;;		None
   299 ;; Auto vars:     Size  Location     Type
   300 ;;		None
   301 ;; Return value:  Size  Location     Type
   302 ;;                  1    wreg      void 
   303 ;; Registers used:
   304 ;;		status,2, status,0
   305 ;; Tracked objects:
   306 ;;		On entry : 0/0
   307 ;;		On exit  : 0/0
   308 ;;		Unchanged: 0/0
   309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   310 ;;      Params:         0       0       0       0       0       0       0
   311 ;;      Locals:         0       0       0       0       0       0       0
   312 ;;      Temps:          0       0       0       0       0       0       0
   313 ;;      Totals:         0       0       0       0       0       0       0
   314 ;;Total ram usage:        0 bytes
   315 ;; Hardware stack levels used: 1
   316 ;; This function calls:
   317 ;;		Nothing
   318 ;; This function is called by:
   319 ;;		Interrupt level 2
   320 ;; This function uses a non-reentrant model
   321 ;;
   322                           
   323                           	psect	intcode
   324   000008                     __pintcode:
   325                           	callstack 0
   326   000008                     _H_ISR:
   327                           	callstack 30
   328                           
   329                           ;incstack = 0
   330   000008  8206               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   331   00000A  ED55  F003         	call	int_func,f	;refresh shadow registers
   332                           
   333                           	psect	intcode_body
   334   0006AA                     __pintcode_body:
   335                           	callstack 30
   336   0006AA                     int_func:
   337                           	callstack 30
   338   0006AA  0006               	pop		; remove dummy address from shadow register refresh
   339   0006AC                     
   340                           ;Final_1a.c: 68:     if(PIR1bits.TMR2IF == 1) {
   341   0006AC  A29E               	btfss	158,1,c	;volatile
   342   0006AE  EF5B  F003         	goto	i2u1_41
   343   0006B2  EF5D  F003         	goto	i2u1_40
   344   0006B6                     i2u1_41:
   345   0006B6  EF5F  F003         	goto	i2l40
   346   0006BA                     i2u1_40:
   347   0006BA                     
   348                           ;Final_1a.c: 69:         counter++;
   349   0006BA  2A05               	incf	_counter^0,f,c
   350   0006BC                     
   351                           ;Final_1a.c: 70:         PIR1bits.TMR2IF = 0;
   352   0006BC  929E               	bcf	158,1,c	;volatile
   353   0006BE                     i2l40:
   354   0006BE  9206               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   355   0006C0  0011               	retfie		f
   356   0006C2                     __end_of_H_ISR:
   357                           	callstack 0
   358                           
   359                           	psect	smallconst
   360   000600                     __psmallconst:
   361                           	callstack 0
   362   000600  00                 	db	0
   363   000601  00                 	db	0	; dummy byte at the end
   364   000000                     
   365                           	psect	rparam
   366   000000                     
   367                           	psect	temp
   368   000006                     btemp:
   369                           	callstack 0
   370   000006                     	ds	1
   371   000000                     int$flags	set	btemp
   372   000000                     wtemp8	set	btemp+1
   373   000000                     ttemp5	set	btemp+1
   374   000000                     ttemp6	set	btemp+4
   375   000000                     ttemp7	set	btemp+8
   376                           
   377                           	psect	idloc
   378                           
   379                           ;Config register IDLOC0 @ 0x200000
   380                           ;	unspecified, using default values
   381   200000                     	org	2097152
   382   200000  FF                 	db	255
   383                           
   384                           ;Config register IDLOC1 @ 0x200001
   385                           ;	unspecified, using default values
   386   200001                     	org	2097153
   387   200001  FF                 	db	255
   388                           
   389                           ;Config register IDLOC2 @ 0x200002
   390                           ;	unspecified, using default values
   391   200002                     	org	2097154
   392   200002  FF                 	db	255
   393                           
   394                           ;Config register IDLOC3 @ 0x200003
   395                           ;	unspecified, using default values
   396   200003                     	org	2097155
   397   200003  FF                 	db	255
   398                           
   399                           ;Config register IDLOC4 @ 0x200004
   400                           ;	unspecified, using default values
   401   200004                     	org	2097156
   402   200004  FF                 	db	255
   403                           
   404                           ;Config register IDLOC5 @ 0x200005
   405                           ;	unspecified, using default values
   406   200005                     	org	2097157
   407   200005  FF                 	db	255
   408                           
   409                           ;Config register IDLOC6 @ 0x200006
   410                           ;	unspecified, using default values
   411   200006                     	org	2097158
   412   200006  FF                 	db	255
   413                           
   414                           ;Config register IDLOC7 @ 0x200007
   415                           ;	unspecified, using default values
   416   200007                     	org	2097159
   417   200007  FF                 	db	255
   418                           
   419                           	psect	config
   420                           
   421                           ; Padding undefined space
   422   300000                     	org	3145728
   423   300000  FF                 	db	255
   424                           
   425                           ;Config register CONFIG1H @ 0x300001
   426                           ;	Oscillator Selection bits
   427                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
   428                           ;	Fail-Safe Clock Monitor Enable bit
   429                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   430                           ;	Internal/External Oscillator Switchover bit
   431                           ;	IESO = OFF, Oscillator Switchover mode disabled
   432   300001                     	org	3145729
   433   300001  08                 	db	8
   434                           
   435                           ;Config register CONFIG2L @ 0x300002
   436                           ;	Power-up Timer Enable bit
   437                           ;	PWRT = OFF, PWRT disabled
   438                           ;	Brown-out Reset Enable bits
   439                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   440                           ;	Brown Out Reset Voltage bits
   441                           ;	BORV = 3, Minimum setting
   442   300002                     	org	3145730
   443   300002  1F                 	db	31
   444                           
   445                           ;Config register CONFIG2H @ 0x300003
   446                           ;	Watchdog Timer Enable bit
   447                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   448                           ;	Watchdog Timer Postscale Select bits
   449                           ;	WDTPS = 32768, 1:32768
   450   300003                     	org	3145731
   451   300003  1E                 	db	30
   452                           
   453                           ; Padding undefined space
   454   300004                     	org	3145732
   455   300004  FF                 	db	255
   456                           
   457                           ;Config register CONFIG3H @ 0x300005
   458                           ;	CCP2 MUX bit
   459                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   460                           ;	PORTB A/D Enable bit
   461                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   462                           ;	Low-Power Timer1 Oscillator Enable bit
   463                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   464                           ;	MCLR Pin Enable bit
   465                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   466   300005                     	org	3145733
   467   300005  83                 	db	131
   468                           
   469                           ;Config register CONFIG4L @ 0x300006
   470                           ;	Stack Full/Underflow Reset Enable bit
   471                           ;	STVREN = ON, Stack full/underflow will cause Reset
   472                           ;	Single-Supply ICSP Enable bit
   473                           ;	LVP = OFF, Single-Supply ICSP disabled
   474                           ;	Extended Instruction Set Enable bit
   475                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   476                           ;	Background Debugger Enable bit
   477                           ;	DEBUG = 0x1, unprogrammed default
   478   300006                     	org	3145734
   479   300006  81                 	db	129
   480                           
   481                           ; Padding undefined space
   482   300007                     	org	3145735
   483   300007  FF                 	db	255
   484                           
   485                           ;Config register CONFIG5L @ 0x300008
   486                           ;	Code Protection bit
   487                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   488                           ;	Code Protection bit
   489                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   490                           ;	Code Protection bit
   491                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   492                           ;	Code Protection bit
   493                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   494   300008                     	org	3145736
   495   300008  0F                 	db	15
   496                           
   497                           ;Config register CONFIG5H @ 0x300009
   498                           ;	Boot Block Code Protection bit
   499                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   500                           ;	Data EEPROM Code Protection bit
   501                           ;	CPD = OFF, Data EEPROM not code-protected
   502   300009                     	org	3145737
   503   300009  C0                 	db	192
   504                           
   505                           ;Config register CONFIG6L @ 0x30000A
   506                           ;	Write Protection bit
   507                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   508                           ;	Write Protection bit
   509                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   510                           ;	Write Protection bit
   511                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   512                           ;	Write Protection bit
   513                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   514   30000A                     	org	3145738
   515   30000A  0F                 	db	15
   516                           
   517                           ;Config register CONFIG6H @ 0x30000B
   518                           ;	Configuration Register Write Protection bit
   519                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   520                           ;	Boot Block Write Protection bit
   521                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
   522                           ;	Data EEPROM Write Protection bit
   523                           ;	WRTD = OFF, Data EEPROM not write-protected
   524   30000B                     	org	3145739
   525   30000B  E0                 	db	224
   526                           
   527                           ;Config register CONFIG7L @ 0x30000C
   528                           ;	Table Read Protection bit
   529                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   530                           ;	Table Read Protection bit
   531                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   532                           ;	Table Read Protection bit
   533                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   534                           ;	Table Read Protection bit
   535                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   536   30000C                     	org	3145740
   537   30000C  0F                 	db	15
   538                           
   539                           ;Config register CONFIG7H @ 0x30000D
   540                           ;	Boot Block Table Read Protection bit
   541                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   542   30000D                     	org	3145741
   543   30000D  40                 	db	64
   544                           tosu	equ	0xFFF
   545                           tosh	equ	0xFFE
   546                           tosl	equ	0xFFD
   547                           stkptr	equ	0xFFC
   548                           pclatu	equ	0xFFB
   549                           pclath	equ	0xFFA
   550                           pcl	equ	0xFF9
   551                           tblptru	equ	0xFF8
   552                           tblptrh	equ	0xFF7
   553                           tblptrl	equ	0xFF6
   554                           tablat	equ	0xFF5
   555                           prodh	equ	0xFF4
   556                           prodl	equ	0xFF3
   557                           indf0	equ	0xFEF
   558                           postinc0	equ	0xFEE
   559                           postdec0	equ	0xFED
   560                           preinc0	equ	0xFEC
   561                           plusw0	equ	0xFEB
   562                           fsr0h	equ	0xFEA
   563                           fsr0l	equ	0xFE9
   564                           wreg	equ	0xFE8
   565                           indf1	equ	0xFE7
   566                           postinc1	equ	0xFE6
   567                           postdec1	equ	0xFE5
   568                           preinc1	equ	0xFE4
   569                           plusw1	equ	0xFE3
   570                           fsr1h	equ	0xFE2
   571                           fsr1l	equ	0xFE1
   572                           bsr	equ	0xFE0
   573                           indf2	equ	0xFDF
   574                           postinc2	equ	0xFDE
   575                           postdec2	equ	0xFDD
   576                           preinc2	equ	0xFDC
   577                           plusw2	equ	0xFDB
   578                           fsr2h	equ	0xFDA
   579                           fsr2l	equ	0xFD9
   580                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      2       5
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _H_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _H_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _H_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _H_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _H_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _H_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _H_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _H_ISR                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _H_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      27        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      2       5       1        4.0%
BITBIGSFRhl         20      0       0      21        0.0%
BITBIGSFRhhhlh      1E      0       0      17        0.0%
BITBIGSFRhhhh        D      0       0      16        0.0%
BITBIGSFRlll         B      0       0      25        0.0%
BITBIGSFRlh          8      0       0      22        0.0%
BITBIGSFRhhll        7      0       0      20        0.0%
BITBIGSFRllhl        6      0       0      24        0.0%
BITBIGSFRhhlh        4      0       0      19        0.0%
BITBIGSFRhhhll       2      0       0      18        0.0%
BITBIGSFRllhh        1      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       5      26        0.0%
DATA                 0      0       5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Jan 04 19:05:55 2024

                      _t 0001                       l48 069E                       u20 0680  
                     u21 067C                       u30 0692                       u31 068E  
                    l741 061E                      l751 0634                      l743 0620  
                    l735 0602                      l761 065A                      l753 0636  
                    l745 0622                      l737 061A                      l771 0680  
                    l763 065C                      l755 0654                      l747 0624  
                    l739 061C                      l773 0692                      l765 065E  
                    l757 0656                      l749 0632                      l775 069A  
                    l767 0660                      l759 0658                      l769 0662  
                    _PR2 0FCB                     _LATC 0F8B                     i2l40 06BE  
                   _main 0602                     btemp 0006                     start 000E  
           ___param_bank 0000                    ?_main 0003                    _T2CON 0FCA  
                  i2l731 06BC                    i2l727 06AC                    i2l729 06BA  
                  _H_ISR 0008                    _TRISC 0F94                    ttemp5 0007  
                  ttemp6 000A                    ttemp7 000E                    status 0FD8  
                  wtemp8 0007          __initialization 06C2             __end_of_main 06AA  
                 ??_main 0003            __activetblptr 0000                   ?_H_ISR 0003  
                 _ADCON1 0FC1                   i2u1_40 06BA                   i2u1_41 06B6  
                 isa$std 0001             __mediumconst 0000               __accesstop 0080  
__end_of__initialization 06C4            ___rparam_used 0001            __end_of_H_ISR 06C2  
         __pcstackCOMRAM 0003                  ??_H_ISR 0003               __pnvCOMRAM 0001  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0600  
                __pcinit 06C2                  __ramtop 0600                  __ptext0 0602  
                _counter 0005           __pintcode_body 06AA     end_of_initialization 06C4  
                int_func 06AA                _TRISAbits 0F92      start_initialization 06C2  
            __pbssCOMRAM 0005                __pintcode 0008              __smallconst 0600  
               _IPR1bits 0F9F                 _PIE1bits 0F9D                 _PIR1bits 0F9E  
               _RCONbits 0FD0               _ADCON0bits 0FC2               _ADCON1bits 0FC1  
             _ADCON2bits 0FC0                 __Hrparam 0000                 __Lrparam 0000  
               isa$xinst 0000                 int$flags 0006               _INTCONbits 0FF2  
               intlevel2 0000               _OSCCONbits 0FD3  
