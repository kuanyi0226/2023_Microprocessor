

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Dec 13 22:20:34 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    18   000000                     
    19                           ; Generated 18/08/2023 GMT
    20                           ; 
    21                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F4520 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53   000000                     _PIE1bits	set	3997
    54   000000                     _PIR1bits	set	3998
    55   000000                     _CCP1CONbits	set	4029
    56   000000                     _CCPR1L	set	4030
    57   000000                     _ADRESL	set	4035
    58                           
    59                           	psect	nvCOMRAM
    60   00000C                     __pnvCOMRAM:
    61                           	callstack 0
    62   00000C                     _PWM_value:
    63                           	callstack 0
    64   00000C                     	ds	1
    65   000000                     _LATC	set	3979
    66   000000                     _TRISAbits	set	3986
    67   000000                     _INTCONbits	set	4082
    68   000000                     _T2CONbits	set	4042
    69   000000                     _OSCCONbits	set	4051
    70   000000                     _ADRESH	set	4036
    71   000000                     _ADCON2bits	set	4032
    72   000000                     _ADCON1bits	set	4033
    73   000000                     _ADCON0bits	set	4034
    74   000000                     _TRISC	set	3988
    75   000000                     _PR2	set	4043
    76                           
    77                           ; #config settings
    78                           
    79                           	psect	cinit
    80   000730                     __pcinit:
    81                           	callstack 0
    82   000730                     start_initialization:
    83                           	callstack 0
    84   000730                     __initialization:
    85                           	callstack 0
    86   000730                     end_of_initialization:
    87                           	callstack 0
    88   000730                     __end_of__initialization:
    89                           	callstack 0
    90   000730  900D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    91   000732  920D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    92   000734  0100               	movlb	0
    93   000736  EF3B  F003         	goto	_main	;jump to C main() function
    94                           
    95                           	psect	cstackCOMRAM
    96   000001                     __pcstackCOMRAM:
    97                           	callstack 0
    98   000001                     ?___lwdiv:
    99                           	callstack 0
   100   000001                     ___lwdiv@dividend:
   101                           	callstack 0
   102                           
   103                           ; 2 bytes @ 0x0
   104   000001                     	ds	2
   105   000003                     ___lwdiv@divisor:
   106                           	callstack 0
   107                           
   108                           ; 2 bytes @ 0x2
   109   000003                     	ds	2
   110   000005                     ___lwdiv@quotient:
   111                           	callstack 0
   112                           
   113                           ; 2 bytes @ 0x4
   114   000005                     	ds	2
   115   000007                     ___lwdiv@counter:
   116                           	callstack 0
   117                           
   118                           ; 1 bytes @ 0x6
   119   000007                     	ds	1
   120   000008                     ??_H_ISR:
   121                           
   122                           ; 1 bytes @ 0x7
   123   000008                     	ds	2
   124   00000A                     H_ISR@AD_total:
   125                           	callstack 0
   126                           
   127                           ; 2 bytes @ 0x9
   128   00000A                     	ds	2
   129   00000C                     
   130                           ; 1 bytes @ 0xB
   131 ;;
   132 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   133 ;;
   134 ;; *************** function _main *****************
   135 ;; Defined at:
   136 ;;		line 91 in file "Lab9_3.c"
   137 ;; Parameters:    Size  Location     Type
   138 ;;		None
   139 ;; Auto vars:     Size  Location     Type
   140 ;;		None
   141 ;; Return value:  Size  Location     Type
   142 ;;                  1    wreg      void 
   143 ;; Registers used:
   144 ;;		wreg, status,2
   145 ;; Tracked objects:
   146 ;;		On entry : 0/0
   147 ;;		On exit  : 0/0
   148 ;;		Unchanged: 0/0
   149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   150 ;;      Params:         0       0       0       0       0       0       0
   151 ;;      Locals:         0       0       0       0       0       0       0
   152 ;;      Temps:          0       0       0       0       0       0       0
   153 ;;      Totals:         0       0       0       0       0       0       0
   154 ;;Total ram usage:        0 bytes
   155 ;; Hardware stack levels required when called: 2
   156 ;; This function calls:
   157 ;;		Nothing
   158 ;; This function is called by:
   159 ;;		Startup code after reset
   160 ;; This function uses a non-reentrant model
   161 ;;
   162                           
   163                           	psect	text0
   164   000676                     __ptext0:
   165                           	callstack 0
   166   000676                     _main:
   167                           	callstack 29
   168   000676                     
   169                           ;Lab9_3.c: 95:     OSCCONbits.IRCF = 0b001;
   170   000676  50D3               	movf	211,w,c	;volatile
   171   000678  0B8F               	andlw	-113
   172   00067A  0910               	iorlw	16
   173   00067C  6ED3               	movwf	211,c	;volatile
   174   00067E                     
   175                           ;Lab9_3.c: 96:     TRISAbits.RA0 = 1;
   176   00067E  8092               	bsf	146,0,c	;volatile
   177   000680                     
   178                           ;Lab9_3.c: 100:     T2CONbits.TMR2ON = 0b1;
   179   000680  84CA               	bsf	202,2,c	;volatile
   180                           
   181                           ;Lab9_3.c: 101:     T2CONbits.T2CKPS = 0b01;
   182   000682  50CA               	movf	202,w,c	;volatile
   183   000684  0BFC               	andlw	-4
   184   000686  0901               	iorlw	1
   185   000688  6ECA               	movwf	202,c	;volatile
   186                           
   187                           ;Lab9_3.c: 103:     CCP1CONbits.CCP1M = 0b1100;
   188   00068A  50BD               	movf	189,w,c	;volatile
   189   00068C  0BF0               	andlw	-16
   190   00068E  090C               	iorlw	12
   191   000690  6EBD               	movwf	189,c	;volatile
   192                           
   193                           ;Lab9_3.c: 105:     TRISC = 0;
   194   000692  0E00               	movlw	0
   195   000694  6E94               	movwf	148,c	;volatile
   196                           
   197                           ;Lab9_3.c: 106:     LATC = 0;
   198   000696  0E00               	movlw	0
   199   000698  6E8B               	movwf	139,c	;volatile
   200                           
   201                           ;Lab9_3.c: 114:     PR2 = 0x9b;
   202   00069A  0E9B               	movlw	155
   203   00069C  6ECB               	movwf	203,c	;volatile
   204                           
   205                           ;Lab9_3.c: 121:     CCPR1L = 0x00;
   206   00069E  0E00               	movlw	0
   207   0006A0  6EBE               	movwf	190,c	;volatile
   208                           
   209                           ;Lab9_3.c: 122:     CCP1CONbits.DC1B = 0b00;
   210   0006A2  0ECF               	movlw	-49
   211   0006A4  16BD               	andwf	189,f,c	;volatile
   212                           
   213                           ;Lab9_3.c: 124:     PWM_value = 0b10000;
   214   0006A6  0E10               	movlw	16
   215   0006A8  6E0C               	movwf	_PWM_value^0,c
   216   0006AA                     
   217                           ;Lab9_3.c: 129:     ADCON1bits.VCFG0 = 0;
   218   0006AA  98C1               	bcf	193,4,c	;volatile
   219   0006AC                     
   220                           ;Lab9_3.c: 130:     ADCON1bits.VCFG1 = 0;
   221   0006AC  9AC1               	bcf	193,5,c	;volatile
   222                           
   223                           ;Lab9_3.c: 131:     ADCON1bits.PCFG = 0b1110;
   224   0006AE  50C1               	movf	193,w,c	;volatile
   225   0006B0  0BF0               	andlw	-16
   226   0006B2  090E               	iorlw	14
   227   0006B4  6EC1               	movwf	193,c	;volatile
   228                           
   229                           ;Lab9_3.c: 132:     ADCON0bits.CHS = 0b0000;
   230   0006B6  0EC3               	movlw	-61
   231   0006B8  16C2               	andwf	194,f,c	;volatile
   232                           
   233                           ;Lab9_3.c: 133:     ADCON2bits.ADCS = 0b100;
   234   0006BA  50C0               	movf	192,w,c	;volatile
   235   0006BC  0BF8               	andlw	-8
   236   0006BE  0904               	iorlw	4
   237   0006C0  6EC0               	movwf	192,c	;volatile
   238                           
   239                           ;Lab9_3.c: 134:     ADCON2bits.ACQT = 0b010;
   240   0006C2  50C0               	movf	192,w,c	;volatile
   241   0006C4  0BC7               	andlw	-57
   242   0006C6  0910               	iorlw	16
   243   0006C8  6EC0               	movwf	192,c	;volatile
   244   0006CA                     
   245                           ;Lab9_3.c: 135:     ADCON0bits.ADON = 1;
   246   0006CA  80C2               	bsf	194,0,c	;volatile
   247   0006CC                     
   248                           ;Lab9_3.c: 136:     ADCON2bits.ADFM = 1;
   249   0006CC  8EC0               	bsf	192,7,c	;volatile
   250   0006CE                     
   251                           ;Lab9_3.c: 140:     PIE1bits.ADIE = 1;
   252   0006CE  8C9D               	bsf	157,6,c	;volatile
   253   0006D0                     
   254                           ;Lab9_3.c: 141:     PIR1bits.ADIF = 0;
   255   0006D0  9C9E               	bcf	158,6,c	;volatile
   256   0006D2                     
   257                           ;Lab9_3.c: 142:     INTCONbits.PEIE = 1;
   258   0006D2  8CF2               	bsf	242,6,c	;volatile
   259   0006D4                     
   260                           ;Lab9_3.c: 143:     INTCONbits.GIE = 1;
   261   0006D4  8EF2               	bsf	242,7,c	;volatile
   262   0006D6                     
   263                           ;Lab9_3.c: 147:     ADCON0bits.GO = 1;
   264   0006D6  82C2               	bsf	194,1,c	;volatile
   265   0006D8                     l44:
   266   0006D8  EF6C  F003         	goto	l44
   267   0006DC  EF07  F000         	goto	start
   268   0006E0                     __end_of_main:
   269                           	callstack 0
   270                           
   271 ;; *************** function _H_ISR *****************
   272 ;; Defined at:
   273 ;;		line 66 in file "Lab9_3.c"
   274 ;; Parameters:    Size  Location     Type
   275 ;;		None
   276 ;; Auto vars:     Size  Location     Type
   277 ;;  AD_total        2    9[COMRAM] unsigned int 
   278 ;;  AD_High         1    0        unsigned char 
   279 ;;  AD_Low          1    0        unsigned char 
   280 ;; Return value:  Size  Location     Type
   281 ;;                  1    wreg      void 
   282 ;; Registers used:
   283 ;;		wreg, status,2, status,0, cstack
   284 ;; Tracked objects:
   285 ;;		On entry : 0/0
   286 ;;		On exit  : 0/0
   287 ;;		Unchanged: 0/0
   288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   289 ;;      Params:         0       0       0       0       0       0       0
   290 ;;      Locals:         2       0       0       0       0       0       0
   291 ;;      Temps:          2       0       0       0       0       0       0
   292 ;;      Totals:         4       0       0       0       0       0       0
   293 ;;Total ram usage:        4 bytes
   294 ;; Hardware stack levels used: 1
   295 ;; Hardware stack levels required when called: 1
   296 ;; This function calls:
   297 ;;		___lwdiv
   298 ;; This function is called by:
   299 ;;		Interrupt level 2
   300 ;; This function uses a non-reentrant model
   301 ;;
   302                           
   303                           	psect	intcode
   304   000008                     __pintcode:
   305                           	callstack 0
   306   000008                     _H_ISR:
   307                           	callstack 29
   308                           
   309                           ;incstack = 0
   310   000008  820D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   311   00000A  ED70  F003         	call	int_func,f	;refresh shadow registers
   312                           
   313                           	psect	intcode_body
   314   0006E0                     __pintcode_body:
   315                           	callstack 29
   316   0006E0                     int_func:
   317                           	callstack 29
   318   0006E0  0006               	pop		; remove dummy address from shadow register refresh
   319   0006E2  50C3               	movf	195,w,c	;volatile
   320   0006E4  50C4               	movf	196,w,c	;volatile
   321   0006E6                     
   322                           ;Lab9_3.c: 71:     unsigned int AD_total = ADRESH * 256 + ADRESL;
   323   0006E6  50C4               	movf	196,w,c	;volatile
   324   0006E8  6E09               	movwf	(??_H_ISR+1)^0,c
   325   0006EA  6A08               	clrf	??_H_ISR^0,c
   326   0006EC  50C3               	movf	195,w,c	;volatile
   327   0006EE  2408               	addwf	??_H_ISR^0,w,c
   328   0006F0  6E0A               	movwf	H_ISR@AD_total^0,c
   329   0006F2  0E00               	movlw	0
   330   0006F4  2009               	addwfc	(??_H_ISR+1)^0,w,c
   331   0006F6  6E0B               	movwf	(H_ISR@AD_total+1)^0,c
   332   0006F8                     
   333                           ;Lab9_3.c: 74:     PWM_value = AD_total/(unsigned)14;
   334   0006F8  C00A  F001         	movff	H_ISR@AD_total,___lwdiv@dividend
   335   0006FC  C00B  F002         	movff	H_ISR@AD_total+1,___lwdiv@dividend+1
   336   000700  0E00               	movlw	0
   337   000702  6E04               	movwf	(___lwdiv@divisor+1)^0,c
   338   000704  0E0E               	movlw	14
   339   000706  6E03               	movwf	___lwdiv@divisor^0,c
   340   000708  EC01  F003         	call	___lwdiv	;wreg free
   341   00070C  5001               	movf	?___lwdiv^0,w,c
   342   00070E  6E0C               	movwf	_PWM_value^0,c
   343   000710                     
   344                           ;Lab9_3.c: 76:    CCPR1L = PWM_value / (unsigned)4;
   345   000710  400C               	rrncf	_PWM_value^0,w,c
   346   000712  42E8               	rrncf	wreg,f,c
   347   000714  0B3F               	andlw	63
   348   000716  6EBE               	movwf	190,c	;volatile
   349   000718                     
   350                           ;Lab9_3.c: 77:    CCP1CONbits.DC1B = PWM_value;
   351   000718  C00C  F008         	movff	_PWM_value,??_H_ISR
   352   00071C  3A08               	swapf	??_H_ISR^0,f,c
   353   00071E  50BD               	movf	189,w,c	;volatile
   354   000720  1808               	xorwf	??_H_ISR^0,w,c
   355   000722  0BCF               	andlw	-49
   356   000724  1808               	xorwf	??_H_ISR^0,w,c
   357   000726  6EBD               	movwf	189,c	;volatile
   358   000728                     
   359                           ;Lab9_3.c: 80:     PIR1bits.ADIF = 0;
   360   000728  9C9E               	bcf	158,6,c	;volatile
   361   00072A                     
   362                           ;Lab9_3.c: 85:     ADCON0bits.GO = 1;
   363   00072A  82C2               	bsf	194,1,c	;volatile
   364   00072C  920D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   365   00072E  0011               	retfie		f
   366   000730                     __end_of_H_ISR:
   367                           	callstack 0
   368                           
   369 ;; *************** function ___lwdiv *****************
   370 ;; Defined at:
   371 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
   372 ;; Parameters:    Size  Location     Type
   373 ;;  dividend        2    0[COMRAM] unsigned int 
   374 ;;  divisor         2    2[COMRAM] unsigned int 
   375 ;; Auto vars:     Size  Location     Type
   376 ;;  quotient        2    4[COMRAM] unsigned int 
   377 ;;  counter         1    6[COMRAM] unsigned char 
   378 ;; Return value:  Size  Location     Type
   379 ;;                  2    0[COMRAM] unsigned int 
   380 ;; Registers used:
   381 ;;		wreg, status,2, status,0
   382 ;; Tracked objects:
   383 ;;		On entry : 0/0
   384 ;;		On exit  : 0/0
   385 ;;		Unchanged: 0/0
   386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   387 ;;      Params:         4       0       0       0       0       0       0
   388 ;;      Locals:         3       0       0       0       0       0       0
   389 ;;      Temps:          0       0       0       0       0       0       0
   390 ;;      Totals:         7       0       0       0       0       0       0
   391 ;;Total ram usage:        7 bytes
   392 ;; Hardware stack levels used: 1
   393 ;; This function calls:
   394 ;;		Nothing
   395 ;; This function is called by:
   396 ;;		_H_ISR
   397 ;; This function uses a non-reentrant model
   398 ;;
   399                           
   400                           	psect	text2
   401   000602                     __ptext2:
   402                           	callstack 0
   403   000602                     ___lwdiv:
   404                           	callstack 29
   405   000602  0E00               	movlw	0
   406   000604  6E06               	movwf	(___lwdiv@quotient+1)^0,c
   407   000606  0E00               	movlw	0
   408   000608  6E05               	movwf	___lwdiv@quotient^0,c
   409   00060A  5003               	movf	___lwdiv@divisor^0,w,c
   410   00060C  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
   411   00060E  B4D8               	btfsc	status,2,c
   412   000610  EF0C  F003         	goto	i2u4_41
   413   000614  EF0E  F003         	goto	i2u4_40
   414   000618                     i2u4_41:
   415   000618  EF36  F003         	goto	i2l541
   416   00061C                     i2u4_40:
   417   00061C  0E01               	movlw	1
   418   00061E  6E07               	movwf	___lwdiv@counter^0,c
   419   000620  EF16  F003         	goto	i2l793
   420   000624                     i2l791:
   421   000624  90D8               	bcf	status,0,c
   422   000626  3603               	rlcf	___lwdiv@divisor^0,f,c
   423   000628  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
   424   00062A  2A07               	incf	___lwdiv@counter^0,f,c
   425   00062C                     i2l793:
   426   00062C  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
   427   00062E  EF1B  F003         	goto	i2u5_41
   428   000632  EF1D  F003         	goto	i2u5_40
   429   000636                     i2u5_41:
   430   000636  EF12  F003         	goto	i2l791
   431   00063A                     i2u5_40:
   432   00063A                     i2l795:
   433   00063A  90D8               	bcf	status,0,c
   434   00063C  3605               	rlcf	___lwdiv@quotient^0,f,c
   435   00063E  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
   436   000640  5003               	movf	___lwdiv@divisor^0,w,c
   437   000642  5C01               	subwf	___lwdiv@dividend^0,w,c
   438   000644  5004               	movf	(___lwdiv@divisor+1)^0,w,c
   439   000646  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
   440   000648  A0D8               	btfss	status,0,c
   441   00064A  EF29  F003         	goto	i2u6_41
   442   00064E  EF2B  F003         	goto	i2u6_40
   443   000652                     i2u6_41:
   444   000652  EF30  F003         	goto	i2l803
   445   000656                     i2u6_40:
   446   000656  5003               	movf	___lwdiv@divisor^0,w,c
   447   000658  5E01               	subwf	___lwdiv@dividend^0,f,c
   448   00065A  5004               	movf	(___lwdiv@divisor+1)^0,w,c
   449   00065C  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
   450   00065E  8005               	bsf	___lwdiv@quotient^0,0,c
   451   000660                     i2l803:
   452   000660  90D8               	bcf	status,0,c
   453   000662  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
   454   000664  3203               	rrcf	___lwdiv@divisor^0,f,c
   455   000666  2E07               	decfsz	___lwdiv@counter^0,f,c
   456   000668  EF1D  F003         	goto	i2l795
   457   00066C                     i2l541:
   458   00066C  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
   459   000670  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
   460   000674  0012               	return		;funcret
   461   000676                     __end_of___lwdiv:
   462                           	callstack 0
   463                           
   464                           	psect	smallconst
   465   000600                     __psmallconst:
   466                           	callstack 0
   467   000600  00                 	db	0
   468   000601  00                 	db	0	; dummy byte at the end
   469   000000                     
   470                           	psect	rparam
   471   000000                     
   472                           	psect	temp
   473   00000D                     btemp:
   474                           	callstack 0
   475   00000D                     	ds	1
   476   000000                     int$flags	set	btemp
   477   000000                     wtemp8	set	btemp+1
   478   000000                     ttemp5	set	btemp+1
   479   000000                     ttemp6	set	btemp+4
   480   000000                     ttemp7	set	btemp+8
   481                           
   482                           	psect	idloc
   483                           
   484                           ;Config register IDLOC0 @ 0x200000
   485                           ;	unspecified, using default values
   486   200000                     	org	2097152
   487   200000  FF                 	db	255
   488                           
   489                           ;Config register IDLOC1 @ 0x200001
   490                           ;	unspecified, using default values
   491   200001                     	org	2097153
   492   200001  FF                 	db	255
   493                           
   494                           ;Config register IDLOC2 @ 0x200002
   495                           ;	unspecified, using default values
   496   200002                     	org	2097154
   497   200002  FF                 	db	255
   498                           
   499                           ;Config register IDLOC3 @ 0x200003
   500                           ;	unspecified, using default values
   501   200003                     	org	2097155
   502   200003  FF                 	db	255
   503                           
   504                           ;Config register IDLOC4 @ 0x200004
   505                           ;	unspecified, using default values
   506   200004                     	org	2097156
   507   200004  FF                 	db	255
   508                           
   509                           ;Config register IDLOC5 @ 0x200005
   510                           ;	unspecified, using default values
   511   200005                     	org	2097157
   512   200005  FF                 	db	255
   513                           
   514                           ;Config register IDLOC6 @ 0x200006
   515                           ;	unspecified, using default values
   516   200006                     	org	2097158
   517   200006  FF                 	db	255
   518                           
   519                           ;Config register IDLOC7 @ 0x200007
   520                           ;	unspecified, using default values
   521   200007                     	org	2097159
   522   200007  FF                 	db	255
   523                           
   524                           	psect	config
   525                           
   526                           ; Padding undefined space
   527   300000                     	org	3145728
   528   300000  FF                 	db	255
   529                           
   530                           ;Config register CONFIG1H @ 0x300001
   531                           ;	Oscillator Selection bits
   532                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
   533                           ;	Fail-Safe Clock Monitor Enable bit
   534                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   535                           ;	Internal/External Oscillator Switchover bit
   536                           ;	IESO = OFF, Oscillator Switchover mode disabled
   537   300001                     	org	3145729
   538   300001  08                 	db	8
   539                           
   540                           ;Config register CONFIG2L @ 0x300002
   541                           ;	Power-up Timer Enable bit
   542                           ;	PWRT = OFF, PWRT disabled
   543                           ;	Brown-out Reset Enable bits
   544                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   545                           ;	Brown Out Reset Voltage bits
   546                           ;	BORV = 3, Minimum setting
   547   300002                     	org	3145730
   548   300002  1F                 	db	31
   549                           
   550                           ;Config register CONFIG2H @ 0x300003
   551                           ;	Watchdog Timer Enable bit
   552                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   553                           ;	Watchdog Timer Postscale Select bits
   554                           ;	WDTPS = 32768, 1:32768
   555   300003                     	org	3145731
   556   300003  1E                 	db	30
   557                           
   558                           ; Padding undefined space
   559   300004                     	org	3145732
   560   300004  FF                 	db	255
   561                           
   562                           ;Config register CONFIG3H @ 0x300005
   563                           ;	CCP2 MUX bit
   564                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   565                           ;	PORTB A/D Enable bit
   566                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   567                           ;	Low-Power Timer1 Oscillator Enable bit
   568                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   569                           ;	MCLR Pin Enable bit
   570                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   571   300005                     	org	3145733
   572   300005  83                 	db	131
   573                           
   574                           ;Config register CONFIG4L @ 0x300006
   575                           ;	Stack Full/Underflow Reset Enable bit
   576                           ;	STVREN = ON, Stack full/underflow will cause Reset
   577                           ;	Single-Supply ICSP Enable bit
   578                           ;	LVP = OFF, Single-Supply ICSP disabled
   579                           ;	Extended Instruction Set Enable bit
   580                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   581                           ;	Background Debugger Enable bit
   582                           ;	DEBUG = 0x1, unprogrammed default
   583   300006                     	org	3145734
   584   300006  81                 	db	129
   585                           
   586                           ; Padding undefined space
   587   300007                     	org	3145735
   588   300007  FF                 	db	255
   589                           
   590                           ;Config register CONFIG5L @ 0x300008
   591                           ;	Code Protection bit
   592                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   593                           ;	Code Protection bit
   594                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   595                           ;	Code Protection bit
   596                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   597                           ;	Code Protection bit
   598                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   599   300008                     	org	3145736
   600   300008  0F                 	db	15
   601                           
   602                           ;Config register CONFIG5H @ 0x300009
   603                           ;	Boot Block Code Protection bit
   604                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   605                           ;	Data EEPROM Code Protection bit
   606                           ;	CPD = OFF, Data EEPROM not code-protected
   607   300009                     	org	3145737
   608   300009  C0                 	db	192
   609                           
   610                           ;Config register CONFIG6L @ 0x30000A
   611                           ;	Write Protection bit
   612                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   613                           ;	Write Protection bit
   614                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   615                           ;	Write Protection bit
   616                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   617                           ;	Write Protection bit
   618                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   619   30000A                     	org	3145738
   620   30000A  0F                 	db	15
   621                           
   622                           ;Config register CONFIG6H @ 0x30000B
   623                           ;	Configuration Register Write Protection bit
   624                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   625                           ;	Boot Block Write Protection bit
   626                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
   627                           ;	Data EEPROM Write Protection bit
   628                           ;	WRTD = OFF, Data EEPROM not write-protected
   629   30000B                     	org	3145739
   630   30000B  E0                 	db	224
   631                           
   632                           ;Config register CONFIG7L @ 0x30000C
   633                           ;	Table Read Protection bit
   634                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   635                           ;	Table Read Protection bit
   636                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   637                           ;	Table Read Protection bit
   638                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   639                           ;	Table Read Protection bit
   640                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   641   30000C                     	org	3145740
   642   30000C  0F                 	db	15
   643                           
   644                           ;Config register CONFIG7H @ 0x30000D
   645                           ;	Boot Block Table Read Protection bit
   646                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   647   30000D                     	org	3145741
   648   30000D  40                 	db	64
   649                           tosu	equ	0xFFF
   650                           tosh	equ	0xFFE
   651                           tosl	equ	0xFFD
   652                           stkptr	equ	0xFFC
   653                           pclatu	equ	0xFFB
   654                           pclath	equ	0xFFA
   655                           pcl	equ	0xFF9
   656                           tblptru	equ	0xFF8
   657                           tblptrh	equ	0xFF7
   658                           tblptrl	equ	0xFF6
   659                           tablat	equ	0xFF5
   660                           prodh	equ	0xFF4
   661                           prodl	equ	0xFF3
   662                           indf0	equ	0xFEF
   663                           postinc0	equ	0xFEE
   664                           postdec0	equ	0xFED
   665                           preinc0	equ	0xFEC
   666                           plusw0	equ	0xFEB
   667                           fsr0h	equ	0xFEA
   668                           fsr0l	equ	0xFE9
   669                           wreg	equ	0xFE8
   670                           indf1	equ	0xFE7
   671                           postinc1	equ	0xFE6
   672                           postdec1	equ	0xFE5
   673                           preinc1	equ	0xFE4
   674                           plusw1	equ	0xFE3
   675                           fsr1h	equ	0xFE2
   676                           fsr1l	equ	0xFE1
   677                           bsr	equ	0xFE0
   678                           indf2	equ	0xFDF
   679                           postinc2	equ	0xFDE
   680                           postdec2	equ	0xFDD
   681                           preinc2	equ	0xFDC
   682                           plusw2	equ	0xFDB
   683                           fsr2h	equ	0xFDA
   684                           fsr2l	equ	0xFD9
   685                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     11      12
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _H_ISR in COMRAM

    _H_ISR->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _H_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _H_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _H_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _H_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _H_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _H_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _H_ISR                                                6     6      0     339
                                              7 COMRAM     4     4      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _H_ISR (ROOT)
   ___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7E      B       C       1        9.5%
STACK                0      0       0       2        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK5            F4      0       0      13        0.0%
BANK5               F4      0       0      14        0.0%
BITBIGSFR_5h         A      0       0      15        0.0%
BITBIGSFR_5l         2      0       0      16        0.0%
BITBIGSFR_4          3      0       0      17        0.0%
BITBIGSFR_3          3      0       0      18        0.0%
BITBIGSFR_2          6      0       0      19        0.0%
BITBIGSFR_1hh        7      0       0      20        0.0%
BITBIGSFR_1hl        5      0       0      21        0.0%
BITBIGSFR_1lh        1      0       0      22        0.0%
BITBIGSFR_1llh      1E      0       0      23        0.0%
BITBIGSFRhh          7      0       0      24        0.0%
BITBIGSFRhl          1      0       0      25        0.0%
BITBIGSFRlh          6      0       0      26        0.0%
BITBIGSFRll          B      0       0      27        0.0%
ABS                  0      0       C      28        0.0%
BIGRAM             5F3      0       0      29        0.0%
DATA                 0      0       C      30        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Dec 13 22:20:34 2023

                     l44 06D8                       l45 06D8                      l761 0676  
                    l771 06CA                      l763 067E                      l781 06D4  
                    l773 06CC                      l765 0680                      l783 06D6  
                    l775 06CE                      l767 06AA                      l777 06D0  
                    l769 06AC                      l779 06D2                      _PR2 0FCB  
                    wreg 0FE8                     _LATC 0F8B                     i2l39 072C  
                   _main 0676                     btemp 000D                     start 000E  
           ___param_bank 0000                    ?_main 0001          __end_of___lwdiv 0676  
                  i2l541 066C                    i2l801 065E                    i2l803 0660  
                  i2l811 06F8                    i2l548 0674                    i2l805 0666  
                  i2l813 0710                    i2l815 0718                    i2l807 06E2  
                  i2l817 0728                    i2l809 06E6                    i2l819 072A  
                  i2l791 0624                    i2l793 062C                    i2l785 0602  
                  i2l795 063A                    i2l787 060A                    i2l797 0640  
                  i2l789 061C                    i2l799 0656                    _H_ISR 0008  
                  _TRISC 0F94                    ttemp5 000E                    ttemp6 0011  
                  ttemp7 0015                    status 0FD8                    wtemp8 000E  
        __initialization 0730             __end_of_main 06E0                   ??_main 000C  
          __activetblptr 0000                   ?_H_ISR 0001                   _ADRESH 0FC4  
                 _ADRESL 0FC3                   _CCPR1L 0FBE                   i2u4_40 061C  
                 i2u4_41 0618                   i2u5_40 063A                   i2u5_41 0636  
                 i2u6_40 0656                   i2u6_41 0652                ??___lwdiv 0005  
                 isa$std 0001             __mediumconst 0000               __accesstop 0080  
__end_of__initialization 0730            ___rparam_used 0001            __end_of_H_ISR 0730  
         __pcstackCOMRAM 0001                  ??_H_ISR 0008               __pnvCOMRAM 000C  
          H_ISR@AD_total 000A                  __Hparam 0000                  __Lparam 0000  
                ___lwdiv 0602             __psmallconst 0600                  __pcinit 0730  
                __ramtop 0600                  __ptext0 0676                  __ptext2 0602  
              _T2CONbits 0FCA           __pintcode_body 06E0     end_of_initialization 0730  
                int_func 06E0                _TRISAbits 0F92                _PWM_value 000C  
            _CCP1CONbits 0FBD      start_initialization 0730         ___lwdiv@dividend 0001  
              __pintcode 0008                 ?___lwdiv 0001              __smallconst 0600  
       ___lwdiv@quotient 0005                 _PIE1bits 0F9D                 _PIR1bits 0F9E  
             _ADCON0bits 0FC2               _ADCON1bits 0FC1               _ADCON2bits 0FC0  
               __Hrparam 0000                 __Lrparam 0000          ___lwdiv@divisor 0003  
        ___lwdiv@counter 0007                 isa$xinst 0000                 int$flags 000D  
             _INTCONbits 0FF2                 intlevel2 0000               _OSCCONbits 0FD3  
